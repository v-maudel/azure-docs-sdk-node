### YamlMime:UniversalReference
items:
  - uid: azure-batch.Task
    id: azure-batch.Task
    name: Task
    summary: Class representing a Task.
    fullName: azure-batch.Task
    type: Class
    children:
      - 'azure-batch.Task.#ctor'
      - 'azure-batch.Task#addWithHttpOperationResponse'
      - 'azure-batch.Task#add'
      - 'azure-batch.Task#listWithHttpOperationResponse'
      - 'azure-batch.Task#list'
      - 'azure-batch.Task#addCollectionWithHttpOperationResponse'
      - 'azure-batch.Task#addCollection'
      - 'azure-batch.Task#deleteMethodWithHttpOperationResponse'
      - 'azure-batch.Task#deleteMethod'
      - 'azure-batch.Task#getWithHttpOperationResponse'
      - 'azure-batch.Task#get'
      - 'azure-batch.Task#updateWithHttpOperationResponse'
      - 'azure-batch.Task#update'
      - 'azure-batch.Task#listSubtasksWithHttpOperationResponse'
      - 'azure-batch.Task#listSubtasks'
      - 'azure-batch.Task#terminateWithHttpOperationResponse'
      - 'azure-batch.Task#terminate'
      - 'azure-batch.Task#reactivateWithHttpOperationResponse'
      - 'azure-batch.Task#reactivate'
      - 'azure-batch.Task#listNextWithHttpOperationResponse'
      - 'azure-batch.Task#listNext'
    langs:
      - js
  - id: 'azure-batch.Task.#ctor'
    uid: 'azure-batch.Task.#ctor'
    parent: azure-batch.Task
    name: Task(client)
    fullName: azure-batch.Task.Task(client)
    summary: Create a Task.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedBatchServiceClient
          description: Reference to the service client.
      content: new Task(client)
    langs:
      - js
  - uid: 'azure-batch.Task#addWithHttpOperationResponse'
    id: 'azure-batch.Task#addWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'addWithHttpOperationResponse(jobId, task, options)'
    summary: >-
      Adds a task to the specified job.


      The maximum lifetime of a task from addition to completion is 7 days. If a

      task has not completed within 7 days of being added it will be terminated
      by

      the Batch service and left in whatever state it was in at that time.
    fullName: 'azure-batch.Task.addWithHttpOperationResponse(jobId, task, options)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job to which the task is to be added.
        - id: task
          type:
            - object
          description: The task to be added.
        - id: task.id
          type:
            - string
          description: >-
            A string that uniquely identifies the task within

            the job. The ID can contain any combination of alphanumeric
            characters

            including hyphens and underscores, and cannot contain more than 64

            characters. The ID is case-preserving and case-insensitive (that is,
            you may

            not have two IDs within a job that differ only by case).
        - id: task.displayName
          type:
            - string
          description: >-
            A display name for the task. The display

            name need not be unique and can contain any Unicode characters up to
            a

            maximum length of 1024.
          optional: true
        - id: task.commandLine
          type:
            - string
          description: >-
            The command line of the task. For

            multi-instance tasks, the command line is executed as the primary
            task,

            after the primary task and all subtasks have finished executing the

            coordination command line. The command line does not run under a
            shell, and

            therefore cannot take advantage of shell features such as
            environment

            variable expansion. If you want to take advantage of such features,
            you

            should invoke the shell in the command line, for example using "cmd
            /c

            MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the
            command

            line refers to file paths, it should use a relative path (relative
            to the

            task working directory), or use the Batch provided environment
            variable

            (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
        - id: task.containerSettings
          type:
            - object
          description: >-
            The settings for the container

            under which the task runs. If the pool that will run this task has

            containerConfiguration set, this must be set as well. If the pool
            that will

            run this task doesn't have containerConfiguration set, this must not
            be set.

            When this is specified, all directories recursively below the

            AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the
            node) are

            mapped into the container, all task environment variables are mapped
            into

            the container, and the task command line is executed in the
            container.
          optional: true
        - id: task.containerSettings.containerRunOptions
          type:
            - string
          description: >-
            Additional

            options to the container create command. These additional options
            are

            supplied as arguments to the "docker create" command, in addition to
            those

            controlled by the Batch Service.
          optional: true
        - id: task.containerSettings.imageName
          type:
            - string
          description: >-
            The image to use to create

            the container in which the task will run. This is the full image
            reference,

            as would be specified to "docker pull". If no tag is provided as
            part of the

            image name, the tag ":latest" is used as a default.
        - id: task.containerSettings.registry
          type:
            - object
          description: >-
            The private registry which

            contains the container image. This setting can be omitted if was
            already

            provided at pool creation.
          optional: true
        - id: task.containerSettings.registry.registryServer
          type:
            - string
          description: |-
            The
            registry URL. If omitted, the default is "docker.io".
          optional: true
        - id: task.containerSettings.registry.userName
          type:
            - string
          description: |-
            The user name to
            log into the registry server.
        - id: task.containerSettings.registry.password
          type:
            - string
          description: |-
            The password to log
            into the registry server.
        - id: task.exitConditions
          type:
            - object
          description: |-
            How the Batch service should respond
            when the task completes.
          optional: true
        - id: task.exitConditions.exitCodes
          type:
            - array
          description: |-
            A list of individual task
            exit codes and how the Batch service should respond to them.
          optional: true
        - id: task.exitConditions.exitCodeRanges
          type:
            - array
          description: |-
            A list of task exit code
            ranges and how the Batch service should respond to them.
          optional: true
        - id: task.exitConditions.preProcessingError
          type:
            - object
          description: |-
            How the Batch
            service should respond if the task fails to start due to an error.
          optional: true
        - id: task.exitConditions.fileUploadError
          type:
            - object
          description: >-
            How the Batch service

            should respond if a file upload error occurs. If the task exited
            with an

            exit code that was specified via exitCodes or exitCodeRanges, and
            then

            encountered a file upload error, then the action specified by the
            exit code

            takes precedence.
          optional: true
        - id: task.exitConditions.default
          type:
            - object
          description: >-
            How the Batch service should

            respond if the task fails with an exit condition not covered by any
            of the

            other properties. This value is used if the task exits with any
            nonzero exit

            code not listed in the exitCodes or exitCodeRanges collection, with
            a

            pre-processing error if the preProcessingError property is not
            present, or

            with a file upload error if the fileUploadError property is not
            present. If

            you want non-default behaviour on exit code 0, you must list it
            explicitly

            using the exitCodes or exitCodeRanges collection.
          optional: true
        - id: task.exitConditions.default.jobAction
          type:
            - string
          description: >-
            An action to take on

            the job containing the task, if the task completes with the given
            exit

            condition and the job's onTaskFailed property is

            'performExitOptionsJobAction'. The default is none for exit code 0
            and

            terminate for all other exit conditions. If the job's onTaskFailed
            property

            is noaction, then specifying this property returns an error and the
            add task

            request fails with an invalid property value error; if you are
            calling the

            REST API directly, the HTTP status code is 400 (Bad Request).
            Possible

            values include: 'none', 'disable', 'terminate'
          optional: true
        - id: task.exitConditions.default.dependencyAction
          type:
            - string
          description: >-
            An action

            that the Batch service performs on tasks that depend on this task.
            The

            default is 'satisfy' for exit code 0, and 'block' for all other exit

            conditions. If the job's usesTaskDependencies property is set to
            false, then

            specifying the dependencyAction property returns an error and the
            add task

            request fails with an invalid property value error; if you are
            calling the

            REST API directly, the HTTP status code is 400  (Bad Request).
            Possible

            values include: 'satisfy', 'block'
          optional: true
        - id: task.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch service

            will download to the compute node before running the command line.
            For

            multi-instance tasks, the resource files will only be downloaded to
            the

            compute node on which the primary task is executed.
          optional: true
        - id: task.outputFiles
          type:
            - array
          description: >-
            A list of files that the Batch service

            will upload from the compute node after running the command line.
            For

            multi-instance tasks, the files will only be uploaded from the
            compute node

            on which the primary task is executed.
          optional: true
        - id: task.environmentSettings
          type:
            - array
          description: |-
            A list of environment variable
            settings for the task.
          optional: true
        - id: task.affinityInfo
          type:
            - object
          description: >-
            A locality hint that can be used by the

            Batch service to select a compute node on which to start the new
            task.
          optional: true
        - id: task.affinityInfo.affinityId
          type:
            - string
          description: >-
            An opaque string representing

            the location of a compute node or a task that has run previously.
            You can

            pass the affinityId of a compute node to indicate that this task
            needs to

            run on that compute node. Note that this is just a soft affinity. If
            the

            target node is busy or unavailable at the time the task is
            scheduled, then

            the task will be scheduled elsewhere.
        - id: task.constraints
          type:
            - object
          description: >-
            The execution constraints that apply to

            this task. If you do not specify constraints, the maxTaskRetryCount
            is the

            maxTaskRetryCount specified for the job, and the maxWallClockTime
            and

            retentionTime are infinite.
          optional: true
        - id: task.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum

            elapsed time that the task may run, measured from the time the task
            starts.

            If the task does not complete within the time limit, the Batch
            service

            terminates it. If this is not specified, there is no time limit on
            how long

            the task may run.
          optional: true
        - id: task.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum time

            to retain the task directory on the compute node where it ran, from
            the time

            it completes execution. After this time, the Batch service may
            delete the

            task directory and all its contents. The default is infinite, i.e.
            the task

            directory will be retained until the compute node is removed or
            reimaged.
          optional: true
        - id: task.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of

            times the task may be retried. The Batch service retries a task if
            its exit

            code is nonzero. Note that this value specifically controls the
            number of

            retries for the task executable due to a nonzero exit code. The
            Batch

            service will try the task once, and may then retry up to this limit.
            For

            example, if the maximum retry count is 3, Batch tries the task up to
            4 times

            (one initial try and 3 retries). If the maximum retry count is 0,
            the Batch

            service does not retry the task after the first attempt. If the
            maximum

            retry count is -1, the Batch service retries the task without limit.

            Resource files and application packages are only downloaded again if
            the

            task is retried on a new compute node.
          optional: true
        - id: task.userIdentity
          type:
            - object
          description: >-
            The user identity under which the task

            runs. If omitted, the task runs as a non-administrative user unique
            to the

            task.
          optional: true
        - id: task.userIdentity.userName
          type:
            - string
          description: >-
            The name of the user identity

            under which the task is run. The userName and autoUser properties
            are

            mutually exclusive; you must specify one but not both.
          optional: true
        - id: task.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto user under which the

            task is run. The userName and autoUser properties are mutually
            exclusive;

            you must specify one but not both.
          optional: true
        - id: task.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for the auto

            user The default value is task. Possible values include: 'task',
            'pool'
          optional: true
        - id: task.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The elevation

            level of the auto user. The default value is nonAdmin. Possible
            values

            include: 'nonAdmin', 'admin'
          optional: true
        - id: task.multiInstanceSettings
          type:
            - object
          description: >-
            An object that indicates that

            the task is a multi-instance task, and contains information about
            how to run

            the multi-instance task.
          optional: true
        - id: task.multiInstanceSettings.numberOfInstances
          type:
            - number
          description: |-
            The number of
            compute nodes required by the task. If omitted, the default is 1.
          optional: true
        - id: task.multiInstanceSettings.coordinationCommandLine
          type:
            - string
          description: >-
            The

            command line to run on all the compute nodes to enable them to
            coordinate

            when the primary runs the main task command. A typical coordination
            command

            line launches a background service and verifies that the service is
            ready to

            process inter-node messages.
        - id: task.multiInstanceSettings.commonResourceFiles
          type:
            - array
          description: >-
            A list of

            files that the Batch service will download before running the
            coordination

            command line. The difference between common resource files and task
            resource

            files is that common resource files are downloaded for all subtasks

            including the primary, whereas task resource files are downloaded
            only for

            the primary. Also note that these resource files are not downloaded
            to the

            task working directory, but instead are downloaded to the task root

            directory (one directory above the working directory).
          optional: true
        - id: task.dependsOn
          type:
            - object
          description: >-
            The tasks that this task depends on. This

            task will not be scheduled until all tasks that it depends on have
            completed

            successfully. If any of those tasks fail and exhaust their retry
            counts,

            this task will never be scheduled. If the job does not have

            usesTaskDependencies set to true, and this element is present, the
            request

            fails with error code TaskDependenciesNotSpecifiedOnJob.
          optional: true
        - id: task.dependsOn.taskIds
          type:
            - array
          description: >-
            The list of task IDs that this task

            depends on. All tasks in this list must complete successfully before
            the

            dependent task can be scheduled. The taskIds collection is limited
            to 64000

            characters total (i.e. the combined length of all task IDs). If the
            taskIds

            collection exceeds the maximum length, the Add Task request fails
            with error

            code TaskDependencyListTooLong. In this case consider using task ID
            ranges

            instead.
          optional: true
        - id: task.dependsOn.taskIdRanges
          type:
            - array
          description: >-
            The list of task ID ranges that

            this task depends on. All tasks in all ranges must complete
            successfully

            before the dependent task can be scheduled.
          optional: true
        - id: task.applicationPackageReferences
          type:
            - array
          description: >-
            A list of application

            packages that the Batch service will deploy to the compute node
            before

            running the command line. Application packages are downloaded and
            deployed

            to a shared directory, not the task working directory. Therefore, if
            a

            referenced package is already on the compute node, and is up to
            date, then

            it is not re-downloaded; the existing copy on the compute node is
            used. If a

            referenced application package cannot be installed, for example
            because the

            package has been deleted or because download failed, the task fails.
          optional: true
        - id: task.authenticationTokenSettings
          type:
            - object
          description: >-
            The settings for an

            authentication token that the task can use to perform Batch service

            operations. If this property is set, the Batch service provides the
            task

            with an authentication token which can be used to authenticate Batch
            service

            operations without requiring an account access key. The token is
            provided

            via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The
            operations

            that the task can carry out using the token depend on the settings.
            For

            example, a task can request job permissions in order to add other
            tasks to

            the job, or check the status of the job or of other tasks under the
            job.
          optional: true
        - id: task.authenticationTokenSettings.access
          type:
            - array
          description: >-
            The Batch resources

            to which the token grants access. The authentication token grants
            access to

            a limited set of Batch service operations. Currently the only
            supported

            value for the access property is 'job', which grants access to all

            operations related to the job which contains the task.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskAddOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.taskAddOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.taskAddOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskAddOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.taskAddOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function addWithHttpOperationResponse(jobId, task, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#add'
    id: 'azure-batch.Task#add'
    parent: azure-batch.Task
    name: 'add(jobId, task, options, optionalCallback)'
    summary: >-
      Adds a task to the specified job.


      The maximum lifetime of a task from addition to completion is 7 days. If a

      task has not completed within 7 days of being added it will be terminated
      by

      the Batch service and left in whatever state it was in at that time.
    fullName: 'azure-batch.Task.add(jobId, task, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job to which the task is to be added.
        - id: task
          type:
            - object
          description: The task to be added.
        - id: task.id
          type:
            - string
          description: >-
            A string that uniquely identifies the task within

            the job. The ID can contain any combination of alphanumeric
            characters

            including hyphens and underscores, and cannot contain more than 64

            characters. The ID is case-preserving and case-insensitive (that is,
            you may

            not have two IDs within a job that differ only by case).
        - id: task.displayName
          type:
            - string
          description: >-
            A display name for the task. The display

            name need not be unique and can contain any Unicode characters up to
            a

            maximum length of 1024.
          optional: true
        - id: task.commandLine
          type:
            - string
          description: >-
            The command line of the task. For

            multi-instance tasks, the command line is executed as the primary
            task,

            after the primary task and all subtasks have finished executing the

            coordination command line. The command line does not run under a
            shell, and

            therefore cannot take advantage of shell features such as
            environment

            variable expansion. If you want to take advantage of such features,
            you

            should invoke the shell in the command line, for example using "cmd
            /c

            MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the
            command

            line refers to file paths, it should use a relative path (relative
            to the

            task working directory), or use the Batch provided environment
            variable

            (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
        - id: task.containerSettings
          type:
            - object
          description: >-
            The settings for the container

            under which the task runs. If the pool that will run this task has

            containerConfiguration set, this must be set as well. If the pool
            that will

            run this task doesn't have containerConfiguration set, this must not
            be set.

            When this is specified, all directories recursively below the

            AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the
            node) are

            mapped into the container, all task environment variables are mapped
            into

            the container, and the task command line is executed in the
            container.
          optional: true
        - id: task.containerSettings.containerRunOptions
          type:
            - string
          description: >-
            Additional

            options to the container create command. These additional options
            are

            supplied as arguments to the "docker create" command, in addition to
            those

            controlled by the Batch Service.
          optional: true
        - id: task.containerSettings.imageName
          type:
            - string
          description: >-
            The image to use to create

            the container in which the task will run. This is the full image
            reference,

            as would be specified to "docker pull". If no tag is provided as
            part of the

            image name, the tag ":latest" is used as a default.
        - id: task.containerSettings.registry
          type:
            - object
          description: >-
            The private registry which

            contains the container image. This setting can be omitted if was
            already

            provided at pool creation.
          optional: true
        - id: task.containerSettings.registry.registryServer
          type:
            - string
          description: |-
            The
            registry URL. If omitted, the default is "docker.io".
          optional: true
        - id: task.containerSettings.registry.userName
          type:
            - string
          description: |-
            The user name to
            log into the registry server.
        - id: task.containerSettings.registry.password
          type:
            - string
          description: |-
            The password to log
            into the registry server.
        - id: task.exitConditions
          type:
            - object
          description: |-
            How the Batch service should respond
            when the task completes.
          optional: true
        - id: task.exitConditions.exitCodes
          type:
            - array
          description: |-
            A list of individual task
            exit codes and how the Batch service should respond to them.
          optional: true
        - id: task.exitConditions.exitCodeRanges
          type:
            - array
          description: |-
            A list of task exit code
            ranges and how the Batch service should respond to them.
          optional: true
        - id: task.exitConditions.preProcessingError
          type:
            - object
          description: |-
            How the Batch
            service should respond if the task fails to start due to an error.
          optional: true
        - id: task.exitConditions.fileUploadError
          type:
            - object
          description: >-
            How the Batch service

            should respond if a file upload error occurs. If the task exited
            with an

            exit code that was specified via exitCodes or exitCodeRanges, and
            then

            encountered a file upload error, then the action specified by the
            exit code

            takes precedence.
          optional: true
        - id: task.exitConditions.default
          type:
            - object
          description: >-
            How the Batch service should

            respond if the task fails with an exit condition not covered by any
            of the

            other properties. This value is used if the task exits with any
            nonzero exit

            code not listed in the exitCodes or exitCodeRanges collection, with
            a

            pre-processing error if the preProcessingError property is not
            present, or

            with a file upload error if the fileUploadError property is not
            present. If

            you want non-default behaviour on exit code 0, you must list it
            explicitly

            using the exitCodes or exitCodeRanges collection.
          optional: true
        - id: task.exitConditions.default.jobAction
          type:
            - string
          description: >-
            An action to take on

            the job containing the task, if the task completes with the given
            exit

            condition and the job's onTaskFailed property is

            'performExitOptionsJobAction'. The default is none for exit code 0
            and

            terminate for all other exit conditions. If the job's onTaskFailed
            property

            is noaction, then specifying this property returns an error and the
            add task

            request fails with an invalid property value error; if you are
            calling the

            REST API directly, the HTTP status code is 400 (Bad Request).
            Possible

            values include: 'none', 'disable', 'terminate'
          optional: true
        - id: task.exitConditions.default.dependencyAction
          type:
            - string
          description: >-
            An action

            that the Batch service performs on tasks that depend on this task.
            The

            default is 'satisfy' for exit code 0, and 'block' for all other exit

            conditions. If the job's usesTaskDependencies property is set to
            false, then

            specifying the dependencyAction property returns an error and the
            add task

            request fails with an invalid property value error; if you are
            calling the

            REST API directly, the HTTP status code is 400  (Bad Request).
            Possible

            values include: 'satisfy', 'block'
          optional: true
        - id: task.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch service

            will download to the compute node before running the command line.
            For

            multi-instance tasks, the resource files will only be downloaded to
            the

            compute node on which the primary task is executed.
          optional: true
        - id: task.outputFiles
          type:
            - array
          description: >-
            A list of files that the Batch service

            will upload from the compute node after running the command line.
            For

            multi-instance tasks, the files will only be uploaded from the
            compute node

            on which the primary task is executed.
          optional: true
        - id: task.environmentSettings
          type:
            - array
          description: |-
            A list of environment variable
            settings for the task.
          optional: true
        - id: task.affinityInfo
          type:
            - object
          description: >-
            A locality hint that can be used by the

            Batch service to select a compute node on which to start the new
            task.
          optional: true
        - id: task.affinityInfo.affinityId
          type:
            - string
          description: >-
            An opaque string representing

            the location of a compute node or a task that has run previously.
            You can

            pass the affinityId of a compute node to indicate that this task
            needs to

            run on that compute node. Note that this is just a soft affinity. If
            the

            target node is busy or unavailable at the time the task is
            scheduled, then

            the task will be scheduled elsewhere.
        - id: task.constraints
          type:
            - object
          description: >-
            The execution constraints that apply to

            this task. If you do not specify constraints, the maxTaskRetryCount
            is the

            maxTaskRetryCount specified for the job, and the maxWallClockTime
            and

            retentionTime are infinite.
          optional: true
        - id: task.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum

            elapsed time that the task may run, measured from the time the task
            starts.

            If the task does not complete within the time limit, the Batch
            service

            terminates it. If this is not specified, there is no time limit on
            how long

            the task may run.
          optional: true
        - id: task.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum time

            to retain the task directory on the compute node where it ran, from
            the time

            it completes execution. After this time, the Batch service may
            delete the

            task directory and all its contents. The default is infinite, i.e.
            the task

            directory will be retained until the compute node is removed or
            reimaged.
          optional: true
        - id: task.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of

            times the task may be retried. The Batch service retries a task if
            its exit

            code is nonzero. Note that this value specifically controls the
            number of

            retries for the task executable due to a nonzero exit code. The
            Batch

            service will try the task once, and may then retry up to this limit.
            For

            example, if the maximum retry count is 3, Batch tries the task up to
            4 times

            (one initial try and 3 retries). If the maximum retry count is 0,
            the Batch

            service does not retry the task after the first attempt. If the
            maximum

            retry count is -1, the Batch service retries the task without limit.

            Resource files and application packages are only downloaded again if
            the

            task is retried on a new compute node.
          optional: true
        - id: task.userIdentity
          type:
            - object
          description: >-
            The user identity under which the task

            runs. If omitted, the task runs as a non-administrative user unique
            to the

            task.
          optional: true
        - id: task.userIdentity.userName
          type:
            - string
          description: >-
            The name of the user identity

            under which the task is run. The userName and autoUser properties
            are

            mutually exclusive; you must specify one but not both.
          optional: true
        - id: task.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto user under which the

            task is run. The userName and autoUser properties are mutually
            exclusive;

            you must specify one but not both.
          optional: true
        - id: task.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for the auto

            user The default value is task. Possible values include: 'task',
            'pool'
          optional: true
        - id: task.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The elevation

            level of the auto user. The default value is nonAdmin. Possible
            values

            include: 'nonAdmin', 'admin'
          optional: true
        - id: task.multiInstanceSettings
          type:
            - object
          description: >-
            An object that indicates that

            the task is a multi-instance task, and contains information about
            how to run

            the multi-instance task.
          optional: true
        - id: task.multiInstanceSettings.numberOfInstances
          type:
            - number
          description: |-
            The number of
            compute nodes required by the task. If omitted, the default is 1.
          optional: true
        - id: task.multiInstanceSettings.coordinationCommandLine
          type:
            - string
          description: >-
            The

            command line to run on all the compute nodes to enable them to
            coordinate

            when the primary runs the main task command. A typical coordination
            command

            line launches a background service and verifies that the service is
            ready to

            process inter-node messages.
        - id: task.multiInstanceSettings.commonResourceFiles
          type:
            - array
          description: >-
            A list of

            files that the Batch service will download before running the
            coordination

            command line. The difference between common resource files and task
            resource

            files is that common resource files are downloaded for all subtasks

            including the primary, whereas task resource files are downloaded
            only for

            the primary. Also note that these resource files are not downloaded
            to the

            task working directory, but instead are downloaded to the task root

            directory (one directory above the working directory).
          optional: true
        - id: task.dependsOn
          type:
            - object
          description: >-
            The tasks that this task depends on. This

            task will not be scheduled until all tasks that it depends on have
            completed

            successfully. If any of those tasks fail and exhaust their retry
            counts,

            this task will never be scheduled. If the job does not have

            usesTaskDependencies set to true, and this element is present, the
            request

            fails with error code TaskDependenciesNotSpecifiedOnJob.
          optional: true
        - id: task.dependsOn.taskIds
          type:
            - array
          description: >-
            The list of task IDs that this task

            depends on. All tasks in this list must complete successfully before
            the

            dependent task can be scheduled. The taskIds collection is limited
            to 64000

            characters total (i.e. the combined length of all task IDs). If the
            taskIds

            collection exceeds the maximum length, the Add Task request fails
            with error

            code TaskDependencyListTooLong. In this case consider using task ID
            ranges

            instead.
          optional: true
        - id: task.dependsOn.taskIdRanges
          type:
            - array
          description: >-
            The list of task ID ranges that

            this task depends on. All tasks in all ranges must complete
            successfully

            before the dependent task can be scheduled.
          optional: true
        - id: task.applicationPackageReferences
          type:
            - array
          description: >-
            A list of application

            packages that the Batch service will deploy to the compute node
            before

            running the command line. Application packages are downloaded and
            deployed

            to a shared directory, not the task working directory. Therefore, if
            a

            referenced package is already on the compute node, and is up to
            date, then

            it is not re-downloaded; the existing copy on the compute node is
            used. If a

            referenced application package cannot be installed, for example
            because the

            package has been deleted or because download failed, the task fails.
          optional: true
        - id: task.authenticationTokenSettings
          type:
            - object
          description: >-
            The settings for an

            authentication token that the task can use to perform Batch service

            operations. If this property is set, the Batch service provides the
            task

            with an authentication token which can be used to authenticate Batch
            service

            operations without requiring an account access key. The token is
            provided

            via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The
            operations

            that the task can carry out using the token depend on the settings.
            For

            example, a task can request job permissions in order to add other
            tasks to

            the job, or check the status of the job or of other tasks under the
            job.
          optional: true
        - id: task.authenticationTokenSettings.access
          type:
            - array
          description: >-
            The Batch resources

            to which the token grants access. The authentication token grants
            access to

            a limited set of Batch service operations. Currently the only
            supported

            value for the access property is 'job', which grants access to all

            operations related to the job which contains the task.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskAddOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.taskAddOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.taskAddOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskAddOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.taskAddOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function add(jobId, task, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#listWithHttpOperationResponse'
    id: 'azure-batch.Task#listWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'listWithHttpOperationResponse(jobId, options)'
    summary: >-
      Lists all of the tasks that are associated with the specified job.


      For multi-instance tasks, information such as affinityId, executionInfo
      and

      nodeInfo refer to the primary task. Use the list subtasks API to retrieve

      information about subtasks.
    fullName: 'azure-batch.Task.listWithHttpOperationResponse(jobId, options)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CloudTaskListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CloudTaskListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskListOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.taskListOptions.filter
          type:
            - string
          description: >-
            An OData $filter clause.

            For more information on constructing this filter, see

            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-tasks.
          optional: true
        - id: options.taskListOptions.select
          type:
            - string
          description: An OData $select clause.
          optional: true
        - id: options.taskListOptions.expand
          type:
            - string
          description: An OData $expand clause.
          optional: true
        - id: options.taskListOptions.maxResults
          type:
            - number
          description: >-
            The maximum number of

            items to return in the response. A maximum of 1000 tasks can be
            returned.
          optional: true
        - id: options.taskListOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.taskListOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskListOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.taskListOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listWithHttpOperationResponse(jobId, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#list'
    id: 'azure-batch.Task#list'
    parent: azure-batch.Task
    name: 'list(jobId, options, optionalCallback)'
    summary: >-
      Lists all of the tasks that are associated with the specified job.


      For multi-instance tasks, information such as affinityId, executionInfo
      and

      nodeInfo refer to the primary task. Use the list subtasks API to retrieve

      information about subtasks.
    fullName: 'azure-batch.Task.list(jobId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CloudTaskListResult} - The deserialized result object.'
        value: '{CloudTaskListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CloudTaskListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CloudTaskListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskListOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.taskListOptions.filter
          type:
            - string
          description: >-
            An OData $filter clause.

            For more information on constructing this filter, see

            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-tasks.
          optional: true
        - id: options.taskListOptions.select
          type:
            - string
          description: An OData $select clause.
          optional: true
        - id: options.taskListOptions.expand
          type:
            - string
          description: An OData $expand clause.
          optional: true
        - id: options.taskListOptions.maxResults
          type:
            - number
          description: >-
            The maximum number of

            items to return in the response. A maximum of 1000 tasks can be
            returned.
          optional: true
        - id: options.taskListOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.taskListOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskListOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.taskListOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function list(jobId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#addCollectionWithHttpOperationResponse'
    id: 'azure-batch.Task#addCollectionWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'addCollectionWithHttpOperationResponse(jobId, value, options)'
    summary: >-
      Adds a collection of tasks to the specified job.


      Note that each task must have a unique ID. The Batch service may not
      return

      the results for each task in the same order the tasks were submitted in
      this

      request. If the server times out or the connection is closed during the

      request, the request may have been partially or fully processed, or not at

      all. In such cases, the user should re-issue the request. Note that it is
      up

      to the user to correctly handle failures when re-issuing a request. For

      example, you should use the same task IDs during a retry so that if the

      prior operation succeeded, the retry will not create extra tasks

      unexpectedly. If the response contains any tasks which failed to add, a

      client can retry the request. In a retry, it is most efficient to resubmit

      only tasks that failed to add, and to omit tasks that were successfully

      added on the first attempt. The maximum lifetime of a task from addition
      to

      completion is 7 days. If a task has not completed within 7 days of being

      added it will be terminated by the Batch service and left in whatever
      state

      it was in at that time.
    fullName: >-
      azure-batch.Task.addCollectionWithHttpOperationResponse(jobId, value,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<TaskAddCollectionResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<TaskAddCollectionResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: |-
            The ID of the job to which the task collection is to
            be added.
        - id: value
          type:
            - array
          description: >-
            The collection of tasks to add. The total serialized

            size of this collection must be less than 4MB. If it is greater than
            4MB

            (for example if each task has 100's of resource files or environment

            variables), the request will fail with code 'RequestBodyTooLarge'
            and should

            be retried again with fewer tasks.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskAddCollectionOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.taskAddCollectionOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.taskAddCollectionOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskAddCollectionOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskAddCollectionOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function addCollectionWithHttpOperationResponse(jobId, value, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#addCollection'
    id: 'azure-batch.Task#addCollection'
    parent: azure-batch.Task
    name: 'addCollection(jobId, value, options, optionalCallback)'
    summary: >-
      Adds a collection of tasks to the specified job.


      Note that each task must have a unique ID. The Batch service may not
      return

      the results for each task in the same order the tasks were submitted in
      this

      request. If the server times out or the connection is closed during the

      request, the request may have been partially or fully processed, or not at

      all. In such cases, the user should re-issue the request. Note that it is
      up

      to the user to correctly handle failures when re-issuing a request. For

      example, you should use the same task IDs during a retry so that if the

      prior operation succeeded, the retry will not create extra tasks

      unexpectedly. If the response contains any tasks which failed to add, a

      client can retry the request. In a retry, it is most efficient to resubmit

      only tasks that failed to add, and to omit tasks that were successfully

      added on the first attempt. The maximum lifetime of a task from addition
      to

      completion is 7 days. If a task has not completed within 7 days of being

      added it will be terminated by the Batch service and left in whatever
      state

      it was in at that time.
    fullName: 'azure-batch.Task.addCollection(jobId, value, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{TaskAddCollectionResult} - The deserialized result object.'
        value: '{TaskAddCollectionResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link TaskAddCollectionResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link TaskAddCollectionResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: |-
            The ID of the job to which the task collection is to
            be added.
        - id: value
          type:
            - array
          description: >-
            The collection of tasks to add. The total serialized

            size of this collection must be less than 4MB. If it is greater than
            4MB

            (for example if each task has 100's of resource files or environment

            variables), the request will fail with code 'RequestBodyTooLarge'
            and should

            be retried again with fewer tasks.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskAddCollectionOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.taskAddCollectionOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.taskAddCollectionOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskAddCollectionOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskAddCollectionOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function addCollection(jobId, value, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#deleteMethodWithHttpOperationResponse'
    id: 'azure-batch.Task#deleteMethodWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'deleteMethodWithHttpOperationResponse(jobId, taskId, options)'
    summary: >-
      Deletes a task from the specified job.


      When a task is deleted, all of the files in its directory on the compute

      node where it ran are also deleted (regardless of the retention time). For

      multi-instance tasks, the delete task operation applies synchronously to
      the

      primary task; subtasks and their files are then deleted asynchronously in

      the background.
    fullName: >-
      azure-batch.Task.deleteMethodWithHttpOperationResponse(jobId, taskId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job from which to delete the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskDeleteMethodOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.taskDeleteMethodOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.taskDeleteMethodOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskDeleteMethodOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskDeleteMethodOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.taskDeleteMethodOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.taskDeleteMethodOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.taskDeleteMethodOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.taskDeleteMethodOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function deleteMethodWithHttpOperationResponse(jobId, taskId, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#deleteMethod'
    id: 'azure-batch.Task#deleteMethod'
    parent: azure-batch.Task
    name: 'deleteMethod(jobId, taskId, options, optionalCallback)'
    summary: >-
      Deletes a task from the specified job.


      When a task is deleted, all of the files in its directory on the compute

      node where it ran are also deleted (regardless of the retention time). For

      multi-instance tasks, the delete task operation applies synchronously to
      the

      primary task; subtasks and their files are then deleted asynchronously in

      the background.
    fullName: 'azure-batch.Task.deleteMethod(jobId, taskId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job from which to delete the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskDeleteMethodOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.taskDeleteMethodOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.taskDeleteMethodOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskDeleteMethodOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskDeleteMethodOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.taskDeleteMethodOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.taskDeleteMethodOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.taskDeleteMethodOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.taskDeleteMethodOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function deleteMethod(jobId, taskId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#getWithHttpOperationResponse'
    id: 'azure-batch.Task#getWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'getWithHttpOperationResponse(jobId, taskId, options)'
    summary: >-
      Gets information about the specified task.


      For multi-instance tasks, information such as affinityId, executionInfo
      and

      nodeInfo refer to the primary task. Use the list subtasks API to retrieve

      information about subtasks.
    fullName: 'azure-batch.Task.getWithHttpOperationResponse(jobId, taskId, options)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<CloudTask>} - The deserialized result object.'
        value: '{HttpOperationResponse<CloudTask>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job that contains the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to get information about.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskGetOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.taskGetOptions.select
          type:
            - string
          description: An OData $select clause.
          optional: true
        - id: options.taskGetOptions.expand
          type:
            - string
          description: An OData $expand clause.
          optional: true
        - id: options.taskGetOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.taskGetOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskGetOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.taskGetOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.taskGetOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.taskGetOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.taskGetOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.taskGetOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getWithHttpOperationResponse(jobId, taskId, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#get'
    id: 'azure-batch.Task#get'
    parent: azure-batch.Task
    name: 'get(jobId, taskId, options, optionalCallback)'
    summary: >-
      Gets information about the specified task.


      For multi-instance tasks, information such as affinityId, executionInfo
      and

      nodeInfo refer to the primary task. Use the list subtasks API to retrieve

      information about subtasks.
    fullName: 'azure-batch.Task.get(jobId, taskId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CloudTask} - The deserialized result object.'
        value: '{CloudTask} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CloudTask} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CloudTask} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job that contains the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to get information about.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskGetOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.taskGetOptions.select
          type:
            - string
          description: An OData $select clause.
          optional: true
        - id: options.taskGetOptions.expand
          type:
            - string
          description: An OData $expand clause.
          optional: true
        - id: options.taskGetOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.taskGetOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskGetOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.taskGetOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.taskGetOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.taskGetOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.taskGetOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.taskGetOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function get(jobId, taskId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#updateWithHttpOperationResponse'
    id: 'azure-batch.Task#updateWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'updateWithHttpOperationResponse(jobId, taskId, options)'
    summary: Updates the properties of the specified task.
    fullName: 'azure-batch.Task.updateWithHttpOperationResponse(jobId, taskId, options)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job containing the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to update.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.constraints
          type:
            - object
          description: >-
            Constraints that apply to this task.

            If omitted, the task is given the default constraints. For
            multi-instance

            tasks, updating the retention time applies only to the primary task
            and not

            subtasks.
          optional: true
        - id: options.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum

            elapsed time that the task may run, measured from the time the task
            starts.

            If the task does not complete within the time limit, the Batch
            service

            terminates it. If this is not specified, there is no time limit on
            how long

            the task may run.
          optional: true
        - id: options.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum

            time to retain the task directory on the compute node where it ran,
            from the

            time it completes execution. After this time, the Batch service may
            delete

            the task directory and all its contents. The default is infinite,
            i.e. the

            task directory will be retained until the compute node is removed or

            reimaged.
          optional: true
        - id: options.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number

            of times the task may be retried. The Batch service retries a task
            if its

            exit code is nonzero. Note that this value specifically controls the
            number

            of retries for the task executable due to a nonzero exit code. The
            Batch

            service will try the task once, and may then retry up to this limit.
            For

            example, if the maximum retry count is 3, Batch tries the task up to
            4 times

            (one initial try and 3 retries). If the maximum retry count is 0,
            the Batch

            service does not retry the task after the first attempt. If the
            maximum

            retry count is -1, the Batch service retries the task without limit.

            Resource files and application packages are only downloaded again if
            the

            task is retried on a new compute node.
          optional: true
        - id: options.taskUpdateOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.taskUpdateOptions.timeout
          type:
            - number
          description: >-
            The maximum time that

            the server can spend processing the request, in seconds. The default
            is 30

            seconds.
          optional: true
        - id: options.taskUpdateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskUpdateOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.taskUpdateOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.taskUpdateOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.taskUpdateOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.taskUpdateOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.taskUpdateOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function updateWithHttpOperationResponse(jobId, taskId, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#update'
    id: 'azure-batch.Task#update'
    parent: azure-batch.Task
    name: 'update(jobId, taskId, options, optionalCallback)'
    summary: Updates the properties of the specified task.
    fullName: 'azure-batch.Task.update(jobId, taskId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job containing the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to update.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.constraints
          type:
            - object
          description: >-
            Constraints that apply to this task.

            If omitted, the task is given the default constraints. For
            multi-instance

            tasks, updating the retention time applies only to the primary task
            and not

            subtasks.
          optional: true
        - id: options.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: >-
            The maximum

            elapsed time that the task may run, measured from the time the task
            starts.

            If the task does not complete within the time limit, the Batch
            service

            terminates it. If this is not specified, there is no time limit on
            how long

            the task may run.
          optional: true
        - id: options.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: >-
            The minimum

            time to retain the task directory on the compute node where it ran,
            from the

            time it completes execution. After this time, the Batch service may
            delete

            the task directory and all its contents. The default is infinite,
            i.e. the

            task directory will be retained until the compute node is removed or

            reimaged.
          optional: true
        - id: options.constraints.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number

            of times the task may be retried. The Batch service retries a task
            if its

            exit code is nonzero. Note that this value specifically controls the
            number

            of retries for the task executable due to a nonzero exit code. The
            Batch

            service will try the task once, and may then retry up to this limit.
            For

            example, if the maximum retry count is 3, Batch tries the task up to
            4 times

            (one initial try and 3 retries). If the maximum retry count is 0,
            the Batch

            service does not retry the task after the first attempt. If the
            maximum

            retry count is -1, the Batch service retries the task without limit.

            Resource files and application packages are only downloaded again if
            the

            task is retried on a new compute node.
          optional: true
        - id: options.taskUpdateOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.taskUpdateOptions.timeout
          type:
            - number
          description: >-
            The maximum time that

            the server can spend processing the request, in seconds. The default
            is 30

            seconds.
          optional: true
        - id: options.taskUpdateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskUpdateOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.taskUpdateOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.taskUpdateOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.taskUpdateOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.taskUpdateOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.taskUpdateOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function update(jobId, taskId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#listSubtasksWithHttpOperationResponse'
    id: 'azure-batch.Task#listSubtasksWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'listSubtasksWithHttpOperationResponse(jobId, taskId, options)'
    summary: |-
      Lists all of the subtasks that are associated with the specified
      multi-instance task.

      If the task is not a multi-instance task then this returns an empty
      collection.
    fullName: >-
      azure-batch.Task.listSubtasksWithHttpOperationResponse(jobId, taskId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CloudTaskListSubtasksResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<CloudTaskListSubtasksResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job.
        - id: taskId
          type:
            - string
          description: The ID of the task.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskListSubtasksOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.taskListSubtasksOptions.select
          type:
            - string
          description: |-
            An OData $select
            clause.
          optional: true
        - id: options.taskListSubtasksOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.taskListSubtasksOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskListSubtasksOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskListSubtasksOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listSubtasksWithHttpOperationResponse(jobId, taskId, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#listSubtasks'
    id: 'azure-batch.Task#listSubtasks'
    parent: azure-batch.Task
    name: 'listSubtasks(jobId, taskId, options, optionalCallback)'
    summary: |-
      Lists all of the subtasks that are associated with the specified
      multi-instance task.

      If the task is not a multi-instance task then this returns an empty
      collection.
    fullName: 'azure-batch.Task.listSubtasks(jobId, taskId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CloudTaskListSubtasksResult} - The deserialized result object.'
        value: '{CloudTaskListSubtasksResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CloudTaskListSubtasksResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CloudTaskListSubtasksResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job.
        - id: taskId
          type:
            - string
          description: The ID of the task.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskListSubtasksOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.taskListSubtasksOptions.select
          type:
            - string
          description: |-
            An OData $select
            clause.
          optional: true
        - id: options.taskListSubtasksOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.taskListSubtasksOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskListSubtasksOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskListSubtasksOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listSubtasks(jobId, taskId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#terminateWithHttpOperationResponse'
    id: 'azure-batch.Task#terminateWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'terminateWithHttpOperationResponse(jobId, taskId, options)'
    summary: >-
      Terminates the specified task.


      When the task has been terminated, it moves to the completed state. For

      multi-instance tasks, the terminate task operation applies synchronously
      to

      the primary task; subtasks are then terminated asynchronously in the

      background.
    fullName: >-
      azure-batch.Task.terminateWithHttpOperationResponse(jobId, taskId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job containing the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to terminate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskTerminateOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.taskTerminateOptions.timeout
          type:
            - number
          description: >-
            The maximum time that

            the server can spend processing the request, in seconds. The default
            is 30

            seconds.
          optional: true
        - id: options.taskTerminateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskTerminateOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskTerminateOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.taskTerminateOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.taskTerminateOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.taskTerminateOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.taskTerminateOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function terminateWithHttpOperationResponse(jobId, taskId, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#terminate'
    id: 'azure-batch.Task#terminate'
    parent: azure-batch.Task
    name: 'terminate(jobId, taskId, options, optionalCallback)'
    summary: >-
      Terminates the specified task.


      When the task has been terminated, it moves to the completed state. For

      multi-instance tasks, the terminate task operation applies synchronously
      to

      the primary task; subtasks are then terminated asynchronously in the

      background.
    fullName: 'azure-batch.Task.terminate(jobId, taskId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job containing the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to terminate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskTerminateOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.taskTerminateOptions.timeout
          type:
            - number
          description: >-
            The maximum time that

            the server can spend processing the request, in seconds. The default
            is 30

            seconds.
          optional: true
        - id: options.taskTerminateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskTerminateOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskTerminateOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.taskTerminateOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.taskTerminateOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.taskTerminateOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.taskTerminateOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function terminate(jobId, taskId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#reactivateWithHttpOperationResponse'
    id: 'azure-batch.Task#reactivateWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'reactivateWithHttpOperationResponse(jobId, taskId, options)'
    summary: >-
      Reactivates a task, allowing it to run again even if its retry

      count has been exhausted.


      Reactivation makes a task eligible to be retried again up to its maximum

      retry count. The task's state is changed to active. As the task is no
      longer

      in the completed state, any previous exit code or failure information is
      no

      longer available after reactivation. Each time a task is reactivated, its

      retry count is reset to 0. Reactivation will fail for tasks that are not

      completed or that previously completed successfully (with an exit code of

      0). Additionally, it will fail if the job has completed (or is terminating

      or deleting).
    fullName: >-
      azure-batch.Task.reactivateWithHttpOperationResponse(jobId, taskId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job containing the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to reactivate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskReactivateOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.taskReactivateOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.taskReactivateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskReactivateOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskReactivateOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.taskReactivateOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.taskReactivateOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.taskReactivateOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.taskReactivateOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function reactivateWithHttpOperationResponse(jobId, taskId, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#reactivate'
    id: 'azure-batch.Task#reactivate'
    parent: azure-batch.Task
    name: 'reactivate(jobId, taskId, options, optionalCallback)'
    summary: >-
      Reactivates a task, allowing it to run again even if its retry

      count has been exhausted.


      Reactivation makes a task eligible to be retried again up to its maximum

      retry count. The task's state is changed to active. As the task is no
      longer

      in the completed state, any previous exit code or failure information is
      no

      longer available after reactivation. Each time a task is reactivated, its

      retry count is reset to 0. Reactivation will fail for tasks that are not

      completed or that previously completed successfully (with an exit code of

      0). Additionally, it will fail if the job has completed (or is terminating

      or deleting).
    fullName: 'azure-batch.Task.reactivate(jobId, taskId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job containing the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to reactivate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskReactivateOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.taskReactivateOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.taskReactivateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskReactivateOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskReactivateOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.taskReactivateOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.taskReactivateOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.taskReactivateOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.taskReactivateOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function reactivate(jobId, taskId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#listNextWithHttpOperationResponse'
    id: 'azure-batch.Task#listNextWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: >-
      Lists all of the tasks that are associated with the specified job.


      For multi-instance tasks, information such as affinityId, executionInfo
      and

      nodeInfo refer to the primary task. Use the list subtasks API to retrieve

      information about subtasks.
    fullName: 'azure-batch.Task.listNextWithHttpOperationResponse(nextPageLink, options)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CloudTaskListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CloudTaskListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskListNextOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.taskListNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskListNextOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.taskListNextOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#listNext'
    id: 'azure-batch.Task#listNext'
    parent: azure-batch.Task
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: >-
      Lists all of the tasks that are associated with the specified job.


      For multi-instance tasks, information such as affinityId, executionInfo
      and

      nodeInfo refer to the primary task. Use the list subtasks API to retrieve

      information about subtasks.
    fullName: 'azure-batch.Task.listNext(nextPageLink, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CloudTaskListResult} - The deserialized result object.'
        value: '{CloudTaskListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CloudTaskListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CloudTaskListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskListNextOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.taskListNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.taskListNextOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.taskListNextOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js

### YamlMime:UniversalReference
items:
  - uid: azure-batch.Pool
    id: azure-batch.Pool
    name: Pool
    summary: Class representing a Pool.
    fullName: azure-batch.Pool
    type: Class
    children:
      - 'azure-batch.Pool.#ctor'
      - 'azure-batch.Pool#listUsageMetricsWithHttpOperationResponse'
      - 'azure-batch.Pool#listUsageMetrics'
      - 'azure-batch.Pool#getAllLifetimeStatisticsWithHttpOperationResponse'
      - 'azure-batch.Pool#getAllLifetimeStatistics'
      - 'azure-batch.Pool#addWithHttpOperationResponse'
      - 'azure-batch.Pool#add'
      - 'azure-batch.Pool#listWithHttpOperationResponse'
      - 'azure-batch.Pool#list'
      - 'azure-batch.Pool#deleteMethodWithHttpOperationResponse'
      - 'azure-batch.Pool#deleteMethod'
      - 'azure-batch.Pool#existsWithHttpOperationResponse'
      - 'azure-batch.Pool#exists'
      - 'azure-batch.Pool#getWithHttpOperationResponse'
      - 'azure-batch.Pool#get'
      - 'azure-batch.Pool#patchWithHttpOperationResponse'
      - 'azure-batch.Pool#patch'
      - 'azure-batch.Pool#disableAutoScaleWithHttpOperationResponse'
      - 'azure-batch.Pool#disableAutoScale'
      - 'azure-batch.Pool#enableAutoScaleWithHttpOperationResponse'
      - 'azure-batch.Pool#enableAutoScale'
      - 'azure-batch.Pool#evaluateAutoScaleWithHttpOperationResponse'
      - 'azure-batch.Pool#evaluateAutoScale'
      - 'azure-batch.Pool#resizeWithHttpOperationResponse'
      - 'azure-batch.Pool#resize'
      - 'azure-batch.Pool#stopResizeWithHttpOperationResponse'
      - 'azure-batch.Pool#stopResize'
      - 'azure-batch.Pool#updatePropertiesWithHttpOperationResponse'
      - 'azure-batch.Pool#updateProperties'
      - 'azure-batch.Pool#upgradeOSWithHttpOperationResponse'
      - 'azure-batch.Pool#upgradeOS'
      - 'azure-batch.Pool#removeNodesWithHttpOperationResponse'
      - 'azure-batch.Pool#removeNodes'
      - 'azure-batch.Pool#listUsageMetricsNextWithHttpOperationResponse'
      - 'azure-batch.Pool#listUsageMetricsNext'
      - 'azure-batch.Pool#listNextWithHttpOperationResponse'
      - 'azure-batch.Pool#listNext'
    langs:
      - js
  - id: 'azure-batch.Pool.#ctor'
    uid: 'azure-batch.Pool.#ctor'
    parent: azure-batch.Pool
    name: Pool(client)
    fullName: azure-batch.Pool.Pool(client)
    summary: Create a Pool.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedBatchServiceClient
          description: Reference to the service client.
      content: new Pool(client)
    langs:
      - js
  - uid: 'azure-batch.Pool#listUsageMetricsWithHttpOperationResponse'
    id: 'azure-batch.Pool#listUsageMetricsWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: listUsageMetricsWithHttpOperationResponse(options)
    summary: >-
      Lists the usage metrics, aggregated by pool across individual time

      intervals, for the specified account.


      If you do not specify a $filter clause including a poolId, the response

      includes all pools that existed in the account in the time range of the

      returned aggregation intervals. If you do not specify a $filter clause

      including a startTime or endTime these filters default to the start and
      end

      times of the last aggregation interval currently available; that is, only

      the last aggregation interval is returned.
    fullName: azure-batch.Pool.listUsageMetricsWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PoolListUsageMetricsResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<PoolListUsageMetricsResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolListUsageMetricsOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.poolListUsageMetricsOptions.startTime
          type:
            - date
          description: >-
            The earliest

            time from which to include metrics. This must be at least two and a
            half

            hours before the current time. If not specified this defaults to the
            start

            time of the last aggregation interval currently available.
          optional: true
        - id: options.poolListUsageMetricsOptions.endTime
          type:
            - date
          description: >-
            The latest time

            from which to include metrics. This must be at least two hours
            before the

            current time. If not specified this defaults to the end time of the
            last

            aggregation interval currently available.
          optional: true
        - id: options.poolListUsageMetricsOptions.filter
          type:
            - string
          description: >-
            An OData

            $filter clause. For more information on constructing this filter,
            see

            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-account-usage-metrics.
          optional: true
        - id: options.poolListUsageMetricsOptions.maxResults
          type:
            - number
          description: >-
            The maximum

            number of items to return in the response. A maximum of 1000 results
            will be

            returned.
          optional: true
        - id: options.poolListUsageMetricsOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: options.poolListUsageMetricsOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolListUsageMetricsOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.poolListUsageMetricsOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listUsageMetricsWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-batch.Pool#listUsageMetrics'
    id: 'azure-batch.Pool#listUsageMetrics'
    parent: azure-batch.Pool
    name: 'listUsageMetrics(options, optionalCallback)'
    summary: >-
      Lists the usage metrics, aggregated by pool across individual time

      intervals, for the specified account.


      If you do not specify a $filter clause including a poolId, the response

      includes all pools that existed in the account in the time range of the

      returned aggregation intervals. If you do not specify a $filter clause

      including a startTime or endTime these filters default to the start and
      end

      times of the last aggregation interval currently available; that is, only

      the last aggregation interval is returned.
    fullName: 'azure-batch.Pool.listUsageMetrics(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PoolListUsageMetricsResult} - The deserialized result object.'
        value: '{PoolListUsageMetricsResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link PoolListUsageMetricsResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link PoolListUsageMetricsResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolListUsageMetricsOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.poolListUsageMetricsOptions.startTime
          type:
            - date
          description: >-
            The earliest

            time from which to include metrics. This must be at least two and a
            half

            hours before the current time. If not specified this defaults to the
            start

            time of the last aggregation interval currently available.
          optional: true
        - id: options.poolListUsageMetricsOptions.endTime
          type:
            - date
          description: >-
            The latest time

            from which to include metrics. This must be at least two hours
            before the

            current time. If not specified this defaults to the end time of the
            last

            aggregation interval currently available.
          optional: true
        - id: options.poolListUsageMetricsOptions.filter
          type:
            - string
          description: >-
            An OData

            $filter clause. For more information on constructing this filter,
            see

            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-account-usage-metrics.
          optional: true
        - id: options.poolListUsageMetricsOptions.maxResults
          type:
            - number
          description: >-
            The maximum

            number of items to return in the response. A maximum of 1000 results
            will be

            returned.
          optional: true
        - id: options.poolListUsageMetricsOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: options.poolListUsageMetricsOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolListUsageMetricsOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.poolListUsageMetricsOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listUsageMetrics(options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Pool#getAllLifetimeStatisticsWithHttpOperationResponse'
    id: 'azure-batch.Pool#getAllLifetimeStatisticsWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: getAllLifetimeStatisticsWithHttpOperationResponse(options)
    summary: >-
      Gets lifetime summary statistics for all of the pools in the

      specified account.


      Statistics are aggregated across all pools that have ever existed in the

      account, from account creation to the last update time of the statistics.

      The statistics may not be immediately available. The Batch service
      performs

      periodic roll-up of statistics. The typical delay is about 30 minutes.
    fullName: >-
      azure-batch.Pool.getAllLifetimeStatisticsWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PoolStatistics>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<PoolStatistics>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolGetAllLifetimeStatisticsOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.poolGetAllLifetimeStatisticsOptions.timeout
          type:
            - number
          description: >-
            The

            maximum time that the server can spend processing the request, in
            seconds.

            The default is 30 seconds.
          optional: true
        - id: options.poolGetAllLifetimeStatisticsOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated request identity, in the form of a GUID with no

            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolGetAllLifetimeStatisticsOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.poolGetAllLifetimeStatisticsOptions.ocpDate
          type:
            - date
          description: >-
            The time

            the request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function getAllLifetimeStatisticsWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-batch.Pool#getAllLifetimeStatistics'
    id: 'azure-batch.Pool#getAllLifetimeStatistics'
    parent: azure-batch.Pool
    name: 'getAllLifetimeStatistics(options, optionalCallback)'
    summary: >-
      Gets lifetime summary statistics for all of the pools in the

      specified account.


      Statistics are aggregated across all pools that have ever existed in the

      account, from account creation to the last update time of the statistics.

      The statistics may not be immediately available. The Batch service
      performs

      periodic roll-up of statistics. The typical delay is about 30 minutes.
    fullName: 'azure-batch.Pool.getAllLifetimeStatistics(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PoolStatistics} - The deserialized result object.'
        value: '{PoolStatistics} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link PoolStatistics} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link PoolStatistics} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolGetAllLifetimeStatisticsOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.poolGetAllLifetimeStatisticsOptions.timeout
          type:
            - number
          description: >-
            The

            maximum time that the server can spend processing the request, in
            seconds.

            The default is 30 seconds.
          optional: true
        - id: options.poolGetAllLifetimeStatisticsOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated request identity, in the form of a GUID with no

            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolGetAllLifetimeStatisticsOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.poolGetAllLifetimeStatisticsOptions.ocpDate
          type:
            - date
          description: >-
            The time

            the request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function getAllLifetimeStatistics(options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Pool#addWithHttpOperationResponse'
    id: 'azure-batch.Pool#addWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: 'addWithHttpOperationResponse(pool, options)'
    summary: >-
      Adds a pool to the specified account.


      When naming pools, avoid including sensitive information such as user
      names

      or secret project names. This information may appear in telemetry logs

      accessible to Microsoft Support engineers.
    fullName: 'azure-batch.Pool.addWithHttpOperationResponse(pool, options)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: pool
          type:
            - object
          description: The pool to be added.
        - id: pool.id
          type:
            - string
          description: >-
            A string that uniquely identifies the pool within

            the account. The ID can contain any combination of alphanumeric
            characters

            including hyphens and underscores, and cannot contain more than 64

            characters. The ID is case-preserving and case-insensitive (that is,
            you may

            not have two pool IDs within an account that differ only by case).
        - id: pool.displayName
          type:
            - string
          description: >-
            The display name for the pool. The

            display name need not be unique and can contain any Unicode
            characters up to

            a maximum length of 1024.
          optional: true
        - id: pool.vmSize
          type:
            - string
          description: >-
            The size of virtual machines in the pool. All

            virtual machines in a pool are the same size. For information about

            available sizes of virtual machines for Cloud Services pools (pools
            created

            with cloudServiceConfiguration), see Sizes for Cloud Services

            (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).

            Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2
            and A2V2.

            For information about available VM sizes for pools using images from
            the

            Virtual Machines Marketplace (pools created with

            virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)

            or Sizes for Virtual Machines (Windows)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).

            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium

            storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
        - id: pool.cloudServiceConfiguration
          type:
            - object
          description: >-
            The cloud service

            configuration for the pool. This property and
            virtualMachineConfiguration

            are mutually exclusive and one of the properties must be specified.
            This

            property cannot be specified if the Batch account was created with
            its

            poolAllocationMode property set to 'UserSubscription'.
          optional: true
        - id: pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: >-
            The Azure Guest OS

            family to be installed on the virtual machines in the pool. Possible
            values

            are: 2 - OS Family 2, equivalent to Windows Server 2008 R2 SP1. 3 -
            OS

            Family 3, equivalent to Windows Server 2012. 4 - OS Family 4,
            equivalent to

            Windows Server 2012 R2. 5 - OS Family 5, equivalent to Windows
            Server 2016.

            For more information, see Azure Guest OS Releases

            (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
        - id: pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: >-
            The Azure

            Guest OS version to be installed on the virtual machines in the
            pool. The

            default value is * which specifies the latest operating system
            version for

            the specified OS family.
          optional: true
        - id: pool.virtualMachineConfiguration
          type:
            - object
          description: >-
            The virtual machine

            configuration for the pool. This property and
            cloudServiceConfiguration are

            mutually exclusive and one of the properties must be specified.
          optional: true
        - id: pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: >-
            A reference

            to the Azure Virtual Machines Marketplace image or the custom
            Virtual

            Machine image to use.
        - id: pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: >-
            The publisher of the Azure Virtual Machines Marketplace image. For
            example,

            Canonical or MicrosoftWindowsServer.
          optional: true
        - id: pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: >-
            The

            offer type of the Azure Virtual Machines Marketplace image. For
            example,

            UbuntuServer or WindowsServer.
          optional: true
        - id: pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: |-
            The
            SKU of the Azure Virtual Machines Marketplace image. For example,
            14.04.0-LTS or 2012-R2-Datacenter.
          optional: true
        - id: pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: >-
            The version of the Azure Virtual Machines Marketplace image. A value
            of

            'latest' can be specified to select the latest version of an image.
            If

            omitted, the default is 'latest'.
          optional: true
        - id: >-
            pool.virtualMachineConfiguration.imageReference.virtualMachineImageId
          type:
            - string
          description: >-
            The

            ARM resource identifier of the virtual machine image. Computes nodes
            of the

            pool will be created using this custom image. This is of the form

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}

            This property is mutually exclusive with other ImageReference
            properties.

            The virtual machine image must be in the same region and
            subscription as the

            Azure Batch account. For information about the firewall settings for
            the

            Batch node agent to communicate with the Batch service see

            https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
          optional: true
        - id: pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: |-
            Settings for the
            operating system disk of the Virtual Machine.
          optional: true
        - id: pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: >-
            The type

            of caching to enable for the OS disk. The default value for caching
            is none.

            For information about the caching options see:

            https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.

            Possible values include: 'none', 'readOnly', 'readWrite'
          optional: true
        - id: pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: >-
            The SKU of

            the Batch node agent to be provisioned on compute nodes in the pool.
            The

            Batch node agent is a program that runs on each node in the pool,
            and

            provides the command-and-control interface between the node and the
            Batch

            service. There are different implementations of the node agent,
            known as

            SKUs, for different operating systems. You must specify a node agent
            SKU

            which matches the selected image reference. To get the list of
            supported

            node agent SKUs along with their list of verified image references,
            see the

            'List supported node agent SKUs' operation.
        - id: pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: >-
            Windows operating system settings on the virtual machine. This
            property must

            not be specified if the imageReference or osDisk property specifies
            a Linux

            OS image.
          optional: true
        - id: >-
            pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: >-
            Whether automatic updates are enabled on the virtual machine. If
            omitted,

            the default value is true.
          optional: true
        - id: pool.virtualMachineConfiguration.dataDisks
          type:
            - array
          description: >-
            The

            configuration for data disks attached to the comptue nodes in the
            pool. This

            property must be specified if the compute nodes in the pool need to
            have

            empty data disks attached to them. This cannot be updated. Each node
            gets

            its own disk (the disk is not a file share). Existing disks cannot
            be

            attached, each attached disk is empty. When the node is removed from
            the

            pool, the disk and all data associated with it is also deleted. The
            disk is

            not formatted after being attached, it must be formatted before use
            - for

            more information see

            https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk#initialize-a-new-data-disk-in-linux

            and

            https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps#add-an-empty-data-disk-to-a-virtual-machine.
          optional: true
        - id: pool.virtualMachineConfiguration.licenseType
          type:
            - string
          description: >-
            The type of

            on-premises license to be used when deploying the operating system.
            This

            only applies to images that contain the Windows operating system,
            and should

            only be used when you hold valid on-premises licenses for the nodes
            which

            will be deployed. If omitted, no on-premises licensing discount is
            applied.

            Values are:


            Windows_Server - The on-premises license is for Windows Server.

            Windows_Client - The on-premises license is for Windows Client.
          optional: true
        - id: pool.virtualMachineConfiguration.containerConfiguration
          type:
            - object
          description: >-
            The container configuration for the pool. If specified, setup is
            performed

            on each node in the pool to allow tasks to run in containers. All
            regular

            tasks and job manager tasks run on this pool must specify the

            containerSettings property, and all other tasks may specify it.
          optional: true
        - id: >-
            pool.virtualMachineConfiguration.containerConfiguration.containerImageNames
          type:
            - array
          description: >-
            The collection of container image names. This is the full image
            reference,

            as would be specified to "docker pull". An image will be sourced
            from the

            default Docker registry unless the image is fully qualified with an

            alternative registry.
          optional: true
        - id: >-
            pool.virtualMachineConfiguration.containerConfiguration.containerRegistries
          type:
            - array
          description: >-
            Additional private registries from which containers can be pulled.
            If any

            images must be downloaded from a private registry which requires

            credentials, then those credentials must be provided here.
          optional: true
        - id: pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The timeout for allocation of

            compute nodes to the pool. This timeout applies only to manual
            scaling; it

            has no effect when enableAutoScale is set to true. The default value
            is 15

            minutes. The minimum value is 5 minutes. If you specify a value less
            than 5

            minutes, the Batch service returns an error; if you are calling the
            REST API

            directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: pool.targetDedicatedNodes
          type:
            - number
          description: >-
            The desired number of dedicated

            compute nodes in the pool. This property must not be specified if

            enableAutoScale is set to true. If enableAutoScale is set to false,
            then you

            must set either targetDedicatedNodes, targetLowPriorityNodes, or
            both.
          optional: true
        - id: pool.targetLowPriorityNodes
          type:
            - number
          description: >-
            The desired number of

            low-priority compute nodes in the pool. This property must not be
            specified

            if enableAutoScale is set to true. If enableAutoScale is set to
            false, then

            you must set either targetDedicatedNodes, targetLowPriorityNodes, or
            both.
          optional: true
        - id: pool.enableAutoScale
          type:
            - boolean
          description: >-
            Whether the pool size should

            automatically adjust over time. If false, at least one of

            targetDedicateNodes and targetLowPriorityNodes must be specified. If
            true,

            the autoScaleFormula property is required and the pool automatically
            resizes

            according to the formula. The default value is false.
          optional: true
        - id: pool.autoScaleFormula
          type:
            - string
          description: >-
            A formula for the desired number of

            compute nodes in the pool. This property must not be specified if

            enableAutoScale is set to false. It is required if enableAutoScale
            is set to

            true. The formula is checked for validity before the pool is
            created. If the

            formula is not valid, the Batch service rejects the request with
            detailed

            error information. For more information about specifying this
            formula, see

            'Automatically scale compute nodes in an Azure Batch pool'

            (https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/).
          optional: true
        - id: pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time

            interval at which to automatically adjust the pool size according to
            the

            autoscale formula. The default value is 15 minutes. The minimum and
            maximum

            value are 5 minutes and 168 hours respectively. If you specify a
            value less

            than 5 minutes or greater than 168 hours, the Batch service returns
            an

            error; if you are calling the REST API directly, the HTTP status
            code is 400

            (Bad Request).
          optional: true
        - id: pool.enableInterNodeCommunication
          type:
            - boolean
          description: >-
            Whether the pool

            permits direct communication between nodes. Enabling inter-node

            communication limits the maximum size of the pool due to deployment

            restrictions on the nodes of the pool. This may result in the pool
            not

            reaching its desired size. The default value is false.
          optional: true
        - id: pool.networkConfiguration
          type:
            - object
          description: |-
            The network configuration for
            the pool.
          optional: true
        - id: pool.networkConfiguration.subnetId
          type:
            - string
          description: >-
            The ARM resource

            identifier of the virtual network subnet which the compute nodes of
            the pool

            will join. This is of the form

            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.

            The virtual network must be in the same region and subscription as
            the Azure

            Batch account. The specified subnet should have enough free IP
            addresses to

            accommodate the number of nodes in the pool. If the subnet doesn't
            have

            enough free IP addresses, the pool will partially allocate compute
            nodes,

            and a resize error will occur. The 'MicrosoftAzureBatch' service
            principal

            must have the 'Classic Virtual Machine Contributor' Role-Based
            Access

            Control (RBAC) role for the specified VNet. The specified subnet
            must allow

            communication from the Azure Batch service to be able to schedule
            tasks on

            the compute nodes. This can be verified by checking if the specified
            VNet

            has any associated Network Security Groups (NSG). If communication
            to the

            compute nodes in the specified subnet is denied by an NSG, then the
            Batch

            service will set the state of the compute nodes to unusable. For
            pools

            created with virtualMachineConfiguration only ARM virtual networks

            ('Microsoft.Network/virtualNetworks') are supported, but for pools
            created

            with cloudServiceConfiguration both ARM and classic virtual networks
            are

            supported. If the specified VNet has any associated Network Security
            Groups

            (NSG), then a few reserved system ports must be enabled for inbound

            communication. For pools created with a virtual machine
            configuration,

            enable ports 29876 and 29877, as well as port 22 for Linux and port
            3389 for

            Windows. For pools created with a cloud service configuration,
            enable ports

            10100, 20100, and 30100. Also enable outbound connections to Azure
            Storage

            on port 443. For more details see:

            https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration
          optional: true
        - id: pool.networkConfiguration.endpointConfiguration
          type:
            - object
          description: |-
            The
            configuration for endpoints on compute nodes in the Batch pool. Pool
            endpoint configuration is only supported on pools with the
            virtualMachineConfiguration property.
          optional: true
        - id: pool.networkConfiguration.endpointConfiguration.inboundNATPools
          type:
            - array
          description: >-
            A list of

            inbound NAT pools that can be used to address specific ports on an

            individual compute node externally. The maximum number of inbound
            NAT pools

            per Batch pool is 5. If the maximum number of inbound NAT pools is
            exceeded

            the request fails with HTTP status code 400.
        - id: pool.startTask
          type:
            - object
          description: >-
            A task specified to run on each compute

            node as it joins the pool. The task runs when the node is added to
            the pool

            or when the node is restarted.
          optional: true
        - id: pool.startTask.commandLine
          type:
            - string
          description: >-
            The command line of the start

            task. The command line does not run under a shell, and therefore
            cannot take

            advantage of shell features such as environment variable expansion.
            If you

            want to take advantage of such features, you should invoke the shell
            in the

            command line, for example using "cmd /c MyCommand" in Windows or
            "/bin/sh -c

            MyCommand" in Linux. If the command line refers to file paths, it
            should use

            a relative path (relative to the task working directory), or use the
            Batch

            provided environment variable

            (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
        - id: pool.startTask.containerSettings
          type:
            - object
          description: >-
            The settings for the

            container under which the start task runs. When this is specified,
            all

            directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root
            of Azure

            Batch directories on the node) are mapped into the container, all
            task

            environment variables are mapped into the container, and the task
            command

            line is executed in the container.
          optional: true
        - id: pool.startTask.containerSettings.containerRunOptions
          type:
            - string
          description: >-
            Additional options to the container create command. These additional
            options

            are supplied as arguments to the "docker create" command, in
            addition to

            those controlled by the Batch Service.
          optional: true
        - id: pool.startTask.containerSettings.imageName
          type:
            - string
          description: >-
            The image to use

            to create the container in which the task will run. This is the full
            image

            reference, as would be specified to "docker pull". If no tag is
            provided as

            part of the image name, the tag ":latest" is used as a default.
        - id: pool.startTask.containerSettings.registry
          type:
            - object
          description: >-
            The private

            registry which contains the container image. This setting can be
            omitted if

            was already provided at pool creation.
          optional: true
        - id: pool.startTask.containerSettings.registry.registryServer
          type:
            - string
          description: 'The registry URL. If omitted, the default is "docker.io".'
          optional: true
        - id: pool.startTask.containerSettings.registry.userName
          type:
            - string
          description: |-
            The user
            name to log into the registry server.
        - id: pool.startTask.containerSettings.registry.password
          type:
            - string
          description: |-
            The
            password to log into the registry server.
        - id: pool.startTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch

            service will download to the compute node before running the command
            line.

            Files listed under this element are located in the task's working
            directory.
          optional: true
        - id: pool.startTask.environmentSettings
          type:
            - array
          description: |-
            A list of environment
            variable settings for the start task.
          optional: true
        - id: pool.startTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which

            the start task runs. If omitted, the task runs as a
            non-administrative user

            unique to the task.
          optional: true
        - id: pool.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The name of the user

            identity under which the task is run. The userName and autoUser
            properties

            are mutually exclusive; you must specify one but not both.
          optional: true
        - id: pool.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto user under

            which the task is run. The userName and autoUser properties are
            mutually

            exclusive; you must specify one but not both.
          optional: true
        - id: pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for

            the auto user The default value is task. Possible values include:
            'task',

            'pool'
          optional: true
        - id: pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The

            elevation level of the auto user. The default value is nonAdmin.
            Possible

            values include: 'nonAdmin', 'admin'
          optional: true
        - id: pool.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of

            times the task may be retried. The Batch service retries a task if
            its exit

            code is nonzero. Note that this value specifically controls the
            number of

            retries. The Batch service will try the task once, and may then
            retry up to

            this limit. For example, if the maximum retry count is 3, Batch
            tries the

            task up to 4 times (one initial try and 3 retries). If the maximum
            retry

            count is 0, the Batch service does not retry the task. If the
            maximum retry

            count is -1, the Batch service retries the task without limit.
          optional: true
        - id: pool.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service

            should wait for the start task to complete successfully (that is, to
            exit

            with exit code 0) before scheduling any tasks on the compute node.
            If true

            and the start task fails on a compute node, the Batch service
            retries the

            start task up to its maximum retry count (maxTaskRetryCount). If the
            task

            has still not completed successfully after all retries, then the
            Batch

            service marks the compute node unusable, and will not schedule tasks
            to it.

            This condition can be detected via the node state and failure info
            details.

            If false, the Batch service will not wait for the start task to
            complete. In

            this case, other tasks can start executing on the compute node while
            the

            start task is still running; and even if the start task fails, new
            tasks

            will continue to be scheduled on the node. The default is false.
          optional: true
        - id: pool.certificateReferences
          type:
            - array
          description: >-
            The list of certificates to be

            installed on each compute node in the pool. For Windows compute
            nodes, the

            Batch service installs the certificates to the specified certificate
            store

            and location. For Linux compute nodes, the certificates are stored
            in a

            directory inside the task working directory and an environment
            variable

            AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this

            location. For certificates with visibility of 'remoteUser', a
            'certs'

            directory is created in the user's home directory (e.g.,

            /home/{user-name}/certs) and certificates are placed in that
            directory.
          optional: true
        - id: pool.applicationPackageReferences
          type:
            - array
          description: |-
            The list of application
            packages to be installed on each compute node in the pool.
          optional: true
        - id: pool.applicationLicenses
          type:
            - array
          description: >-
            The list of application licenses

            the Batch service will make available on each compute node in the
            pool. The

            list of application licenses must be a subset of available Batch
            service

            application licenses. If a license is requested which is not
            supported, pool

            creation will fail.
          optional: true
        - id: pool.maxTasksPerNode
          type:
            - number
          description: >-
            The maximum number of tasks that can

            run concurrently on a single compute node in the pool. The default
            value is

            1. The maximum value of this setting depends on the size of the
            compute

            nodes in the pool (the vmSize setting).
          optional: true
        - id: pool.taskSchedulingPolicy
          type:
            - object
          description: |-
            How tasks are distributed across
            compute nodes in a pool.
          optional: true
        - id: pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: |-
            How tasks are
            distributed across compute nodes in a pool. Possible values include:
            'spread', 'pack'
        - id: pool.userAccounts
          type:
            - array
          description: |-
            The list of user accounts to be created
            on each node in the pool.
          optional: true
        - id: pool.metadata
          type:
            - array
          description: >-
            A list of name-value pairs associated with

            the pool as metadata. The Batch service does not assign any meaning
            to

            metadata; it is solely for the use of user code.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolAddOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.poolAddOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.poolAddOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolAddOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.poolAddOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function addWithHttpOperationResponse(pool, options)'
    langs:
      - js
  - uid: 'azure-batch.Pool#add'
    id: 'azure-batch.Pool#add'
    parent: azure-batch.Pool
    name: 'add(pool, options, optionalCallback)'
    summary: >-
      Adds a pool to the specified account.


      When naming pools, avoid including sensitive information such as user
      names

      or secret project names. This information may appear in telemetry logs

      accessible to Microsoft Support engineers.
    fullName: 'azure-batch.Pool.add(pool, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: pool
          type:
            - object
          description: The pool to be added.
        - id: pool.id
          type:
            - string
          description: >-
            A string that uniquely identifies the pool within

            the account. The ID can contain any combination of alphanumeric
            characters

            including hyphens and underscores, and cannot contain more than 64

            characters. The ID is case-preserving and case-insensitive (that is,
            you may

            not have two pool IDs within an account that differ only by case).
        - id: pool.displayName
          type:
            - string
          description: >-
            The display name for the pool. The

            display name need not be unique and can contain any Unicode
            characters up to

            a maximum length of 1024.
          optional: true
        - id: pool.vmSize
          type:
            - string
          description: >-
            The size of virtual machines in the pool. All

            virtual machines in a pool are the same size. For information about

            available sizes of virtual machines for Cloud Services pools (pools
            created

            with cloudServiceConfiguration), see Sizes for Cloud Services

            (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).

            Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2
            and A2V2.

            For information about available VM sizes for pools using images from
            the

            Virtual Machines Marketplace (pools created with

            virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)

            or Sizes for Virtual Machines (Windows)

            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).

            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium

            storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
        - id: pool.cloudServiceConfiguration
          type:
            - object
          description: >-
            The cloud service

            configuration for the pool. This property and
            virtualMachineConfiguration

            are mutually exclusive and one of the properties must be specified.
            This

            property cannot be specified if the Batch account was created with
            its

            poolAllocationMode property set to 'UserSubscription'.
          optional: true
        - id: pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: >-
            The Azure Guest OS

            family to be installed on the virtual machines in the pool. Possible
            values

            are: 2 - OS Family 2, equivalent to Windows Server 2008 R2 SP1. 3 -
            OS

            Family 3, equivalent to Windows Server 2012. 4 - OS Family 4,
            equivalent to

            Windows Server 2012 R2. 5 - OS Family 5, equivalent to Windows
            Server 2016.

            For more information, see Azure Guest OS Releases

            (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
        - id: pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: >-
            The Azure

            Guest OS version to be installed on the virtual machines in the
            pool. The

            default value is * which specifies the latest operating system
            version for

            the specified OS family.
          optional: true
        - id: pool.virtualMachineConfiguration
          type:
            - object
          description: >-
            The virtual machine

            configuration for the pool. This property and
            cloudServiceConfiguration are

            mutually exclusive and one of the properties must be specified.
          optional: true
        - id: pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: >-
            A reference

            to the Azure Virtual Machines Marketplace image or the custom
            Virtual

            Machine image to use.
        - id: pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: >-
            The publisher of the Azure Virtual Machines Marketplace image. For
            example,

            Canonical or MicrosoftWindowsServer.
          optional: true
        - id: pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: >-
            The

            offer type of the Azure Virtual Machines Marketplace image. For
            example,

            UbuntuServer or WindowsServer.
          optional: true
        - id: pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: |-
            The
            SKU of the Azure Virtual Machines Marketplace image. For example,
            14.04.0-LTS or 2012-R2-Datacenter.
          optional: true
        - id: pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: >-
            The version of the Azure Virtual Machines Marketplace image. A value
            of

            'latest' can be specified to select the latest version of an image.
            If

            omitted, the default is 'latest'.
          optional: true
        - id: >-
            pool.virtualMachineConfiguration.imageReference.virtualMachineImageId
          type:
            - string
          description: >-
            The

            ARM resource identifier of the virtual machine image. Computes nodes
            of the

            pool will be created using this custom image. This is of the form

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}

            This property is mutually exclusive with other ImageReference
            properties.

            The virtual machine image must be in the same region and
            subscription as the

            Azure Batch account. For information about the firewall settings for
            the

            Batch node agent to communicate with the Batch service see

            https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
          optional: true
        - id: pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: |-
            Settings for the
            operating system disk of the Virtual Machine.
          optional: true
        - id: pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: >-
            The type

            of caching to enable for the OS disk. The default value for caching
            is none.

            For information about the caching options see:

            https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.

            Possible values include: 'none', 'readOnly', 'readWrite'
          optional: true
        - id: pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: >-
            The SKU of

            the Batch node agent to be provisioned on compute nodes in the pool.
            The

            Batch node agent is a program that runs on each node in the pool,
            and

            provides the command-and-control interface between the node and the
            Batch

            service. There are different implementations of the node agent,
            known as

            SKUs, for different operating systems. You must specify a node agent
            SKU

            which matches the selected image reference. To get the list of
            supported

            node agent SKUs along with their list of verified image references,
            see the

            'List supported node agent SKUs' operation.
        - id: pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: >-
            Windows operating system settings on the virtual machine. This
            property must

            not be specified if the imageReference or osDisk property specifies
            a Linux

            OS image.
          optional: true
        - id: >-
            pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: >-
            Whether automatic updates are enabled on the virtual machine. If
            omitted,

            the default value is true.
          optional: true
        - id: pool.virtualMachineConfiguration.dataDisks
          type:
            - array
          description: >-
            The

            configuration for data disks attached to the comptue nodes in the
            pool. This

            property must be specified if the compute nodes in the pool need to
            have

            empty data disks attached to them. This cannot be updated. Each node
            gets

            its own disk (the disk is not a file share). Existing disks cannot
            be

            attached, each attached disk is empty. When the node is removed from
            the

            pool, the disk and all data associated with it is also deleted. The
            disk is

            not formatted after being attached, it must be formatted before use
            - for

            more information see

            https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk#initialize-a-new-data-disk-in-linux

            and

            https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps#add-an-empty-data-disk-to-a-virtual-machine.
          optional: true
        - id: pool.virtualMachineConfiguration.licenseType
          type:
            - string
          description: >-
            The type of

            on-premises license to be used when deploying the operating system.
            This

            only applies to images that contain the Windows operating system,
            and should

            only be used when you hold valid on-premises licenses for the nodes
            which

            will be deployed. If omitted, no on-premises licensing discount is
            applied.

            Values are:


            Windows_Server - The on-premises license is for Windows Server.

            Windows_Client - The on-premises license is for Windows Client.
          optional: true
        - id: pool.virtualMachineConfiguration.containerConfiguration
          type:
            - object
          description: >-
            The container configuration for the pool. If specified, setup is
            performed

            on each node in the pool to allow tasks to run in containers. All
            regular

            tasks and job manager tasks run on this pool must specify the

            containerSettings property, and all other tasks may specify it.
          optional: true
        - id: >-
            pool.virtualMachineConfiguration.containerConfiguration.containerImageNames
          type:
            - array
          description: >-
            The collection of container image names. This is the full image
            reference,

            as would be specified to "docker pull". An image will be sourced
            from the

            default Docker registry unless the image is fully qualified with an

            alternative registry.
          optional: true
        - id: >-
            pool.virtualMachineConfiguration.containerConfiguration.containerRegistries
          type:
            - array
          description: >-
            Additional private registries from which containers can be pulled.
            If any

            images must be downloaded from a private registry which requires

            credentials, then those credentials must be provided here.
          optional: true
        - id: pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The timeout for allocation of

            compute nodes to the pool. This timeout applies only to manual
            scaling; it

            has no effect when enableAutoScale is set to true. The default value
            is 15

            minutes. The minimum value is 5 minutes. If you specify a value less
            than 5

            minutes, the Batch service returns an error; if you are calling the
            REST API

            directly, the HTTP status code is 400 (Bad Request).
          optional: true
        - id: pool.targetDedicatedNodes
          type:
            - number
          description: >-
            The desired number of dedicated

            compute nodes in the pool. This property must not be specified if

            enableAutoScale is set to true. If enableAutoScale is set to false,
            then you

            must set either targetDedicatedNodes, targetLowPriorityNodes, or
            both.
          optional: true
        - id: pool.targetLowPriorityNodes
          type:
            - number
          description: >-
            The desired number of

            low-priority compute nodes in the pool. This property must not be
            specified

            if enableAutoScale is set to true. If enableAutoScale is set to
            false, then

            you must set either targetDedicatedNodes, targetLowPriorityNodes, or
            both.
          optional: true
        - id: pool.enableAutoScale
          type:
            - boolean
          description: >-
            Whether the pool size should

            automatically adjust over time. If false, at least one of

            targetDedicateNodes and targetLowPriorityNodes must be specified. If
            true,

            the autoScaleFormula property is required and the pool automatically
            resizes

            according to the formula. The default value is false.
          optional: true
        - id: pool.autoScaleFormula
          type:
            - string
          description: >-
            A formula for the desired number of

            compute nodes in the pool. This property must not be specified if

            enableAutoScale is set to false. It is required if enableAutoScale
            is set to

            true. The formula is checked for validity before the pool is
            created. If the

            formula is not valid, the Batch service rejects the request with
            detailed

            error information. For more information about specifying this
            formula, see

            'Automatically scale compute nodes in an Azure Batch pool'

            (https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/).
          optional: true
        - id: pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time

            interval at which to automatically adjust the pool size according to
            the

            autoscale formula. The default value is 15 minutes. The minimum and
            maximum

            value are 5 minutes and 168 hours respectively. If you specify a
            value less

            than 5 minutes or greater than 168 hours, the Batch service returns
            an

            error; if you are calling the REST API directly, the HTTP status
            code is 400

            (Bad Request).
          optional: true
        - id: pool.enableInterNodeCommunication
          type:
            - boolean
          description: >-
            Whether the pool

            permits direct communication between nodes. Enabling inter-node

            communication limits the maximum size of the pool due to deployment

            restrictions on the nodes of the pool. This may result in the pool
            not

            reaching its desired size. The default value is false.
          optional: true
        - id: pool.networkConfiguration
          type:
            - object
          description: |-
            The network configuration for
            the pool.
          optional: true
        - id: pool.networkConfiguration.subnetId
          type:
            - string
          description: >-
            The ARM resource

            identifier of the virtual network subnet which the compute nodes of
            the pool

            will join. This is of the form

            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.

            The virtual network must be in the same region and subscription as
            the Azure

            Batch account. The specified subnet should have enough free IP
            addresses to

            accommodate the number of nodes in the pool. If the subnet doesn't
            have

            enough free IP addresses, the pool will partially allocate compute
            nodes,

            and a resize error will occur. The 'MicrosoftAzureBatch' service
            principal

            must have the 'Classic Virtual Machine Contributor' Role-Based
            Access

            Control (RBAC) role for the specified VNet. The specified subnet
            must allow

            communication from the Azure Batch service to be able to schedule
            tasks on

            the compute nodes. This can be verified by checking if the specified
            VNet

            has any associated Network Security Groups (NSG). If communication
            to the

            compute nodes in the specified subnet is denied by an NSG, then the
            Batch

            service will set the state of the compute nodes to unusable. For
            pools

            created with virtualMachineConfiguration only ARM virtual networks

            ('Microsoft.Network/virtualNetworks') are supported, but for pools
            created

            with cloudServiceConfiguration both ARM and classic virtual networks
            are

            supported. If the specified VNet has any associated Network Security
            Groups

            (NSG), then a few reserved system ports must be enabled for inbound

            communication. For pools created with a virtual machine
            configuration,

            enable ports 29876 and 29877, as well as port 22 for Linux and port
            3389 for

            Windows. For pools created with a cloud service configuration,
            enable ports

            10100, 20100, and 30100. Also enable outbound connections to Azure
            Storage

            on port 443. For more details see:

            https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration
          optional: true
        - id: pool.networkConfiguration.endpointConfiguration
          type:
            - object
          description: |-
            The
            configuration for endpoints on compute nodes in the Batch pool. Pool
            endpoint configuration is only supported on pools with the
            virtualMachineConfiguration property.
          optional: true
        - id: pool.networkConfiguration.endpointConfiguration.inboundNATPools
          type:
            - array
          description: >-
            A list of

            inbound NAT pools that can be used to address specific ports on an

            individual compute node externally. The maximum number of inbound
            NAT pools

            per Batch pool is 5. If the maximum number of inbound NAT pools is
            exceeded

            the request fails with HTTP status code 400.
        - id: pool.startTask
          type:
            - object
          description: >-
            A task specified to run on each compute

            node as it joins the pool. The task runs when the node is added to
            the pool

            or when the node is restarted.
          optional: true
        - id: pool.startTask.commandLine
          type:
            - string
          description: >-
            The command line of the start

            task. The command line does not run under a shell, and therefore
            cannot take

            advantage of shell features such as environment variable expansion.
            If you

            want to take advantage of such features, you should invoke the shell
            in the

            command line, for example using "cmd /c MyCommand" in Windows or
            "/bin/sh -c

            MyCommand" in Linux. If the command line refers to file paths, it
            should use

            a relative path (relative to the task working directory), or use the
            Batch

            provided environment variable

            (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
        - id: pool.startTask.containerSettings
          type:
            - object
          description: >-
            The settings for the

            container under which the start task runs. When this is specified,
            all

            directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root
            of Azure

            Batch directories on the node) are mapped into the container, all
            task

            environment variables are mapped into the container, and the task
            command

            line is executed in the container.
          optional: true
        - id: pool.startTask.containerSettings.containerRunOptions
          type:
            - string
          description: >-
            Additional options to the container create command. These additional
            options

            are supplied as arguments to the "docker create" command, in
            addition to

            those controlled by the Batch Service.
          optional: true
        - id: pool.startTask.containerSettings.imageName
          type:
            - string
          description: >-
            The image to use

            to create the container in which the task will run. This is the full
            image

            reference, as would be specified to "docker pull". If no tag is
            provided as

            part of the image name, the tag ":latest" is used as a default.
        - id: pool.startTask.containerSettings.registry
          type:
            - object
          description: >-
            The private

            registry which contains the container image. This setting can be
            omitted if

            was already provided at pool creation.
          optional: true
        - id: pool.startTask.containerSettings.registry.registryServer
          type:
            - string
          description: 'The registry URL. If omitted, the default is "docker.io".'
          optional: true
        - id: pool.startTask.containerSettings.registry.userName
          type:
            - string
          description: |-
            The user
            name to log into the registry server.
        - id: pool.startTask.containerSettings.registry.password
          type:
            - string
          description: |-
            The
            password to log into the registry server.
        - id: pool.startTask.resourceFiles
          type:
            - array
          description: >-
            A list of files that the Batch

            service will download to the compute node before running the command
            line.

            Files listed under this element are located in the task's working
            directory.
          optional: true
        - id: pool.startTask.environmentSettings
          type:
            - array
          description: |-
            A list of environment
            variable settings for the start task.
          optional: true
        - id: pool.startTask.userIdentity
          type:
            - object
          description: >-
            The user identity under which

            the start task runs. If omitted, the task runs as a
            non-administrative user

            unique to the task.
          optional: true
        - id: pool.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The name of the user

            identity under which the task is run. The userName and autoUser
            properties

            are mutually exclusive; you must specify one but not both.
          optional: true
        - id: pool.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto user under

            which the task is run. The userName and autoUser properties are
            mutually

            exclusive; you must specify one but not both.
          optional: true
        - id: pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for

            the auto user The default value is task. Possible values include:
            'task',

            'pool'
          optional: true
        - id: pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The

            elevation level of the auto user. The default value is nonAdmin.
            Possible

            values include: 'nonAdmin', 'admin'
          optional: true
        - id: pool.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of

            times the task may be retried. The Batch service retries a task if
            its exit

            code is nonzero. Note that this value specifically controls the
            number of

            retries. The Batch service will try the task once, and may then
            retry up to

            this limit. For example, if the maximum retry count is 3, Batch
            tries the

            task up to 4 times (one initial try and 3 retries). If the maximum
            retry

            count is 0, the Batch service does not retry the task. If the
            maximum retry

            count is -1, the Batch service retries the task without limit.
          optional: true
        - id: pool.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service

            should wait for the start task to complete successfully (that is, to
            exit

            with exit code 0) before scheduling any tasks on the compute node.
            If true

            and the start task fails on a compute node, the Batch service
            retries the

            start task up to its maximum retry count (maxTaskRetryCount). If the
            task

            has still not completed successfully after all retries, then the
            Batch

            service marks the compute node unusable, and will not schedule tasks
            to it.

            This condition can be detected via the node state and failure info
            details.

            If false, the Batch service will not wait for the start task to
            complete. In

            this case, other tasks can start executing on the compute node while
            the

            start task is still running; and even if the start task fails, new
            tasks

            will continue to be scheduled on the node. The default is false.
          optional: true
        - id: pool.certificateReferences
          type:
            - array
          description: >-
            The list of certificates to be

            installed on each compute node in the pool. For Windows compute
            nodes, the

            Batch service installs the certificates to the specified certificate
            store

            and location. For Linux compute nodes, the certificates are stored
            in a

            directory inside the task working directory and an environment
            variable

            AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this

            location. For certificates with visibility of 'remoteUser', a
            'certs'

            directory is created in the user's home directory (e.g.,

            /home/{user-name}/certs) and certificates are placed in that
            directory.
          optional: true
        - id: pool.applicationPackageReferences
          type:
            - array
          description: |-
            The list of application
            packages to be installed on each compute node in the pool.
          optional: true
        - id: pool.applicationLicenses
          type:
            - array
          description: >-
            The list of application licenses

            the Batch service will make available on each compute node in the
            pool. The

            list of application licenses must be a subset of available Batch
            service

            application licenses. If a license is requested which is not
            supported, pool

            creation will fail.
          optional: true
        - id: pool.maxTasksPerNode
          type:
            - number
          description: >-
            The maximum number of tasks that can

            run concurrently on a single compute node in the pool. The default
            value is

            1. The maximum value of this setting depends on the size of the
            compute

            nodes in the pool (the vmSize setting).
          optional: true
        - id: pool.taskSchedulingPolicy
          type:
            - object
          description: |-
            How tasks are distributed across
            compute nodes in a pool.
          optional: true
        - id: pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: |-
            How tasks are
            distributed across compute nodes in a pool. Possible values include:
            'spread', 'pack'
        - id: pool.userAccounts
          type:
            - array
          description: |-
            The list of user accounts to be created
            on each node in the pool.
          optional: true
        - id: pool.metadata
          type:
            - array
          description: >-
            A list of name-value pairs associated with

            the pool as metadata. The Batch service does not assign any meaning
            to

            metadata; it is solely for the use of user code.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolAddOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.poolAddOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.poolAddOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolAddOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.poolAddOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function add(pool, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Pool#listWithHttpOperationResponse'
    id: 'azure-batch.Pool#listWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: listWithHttpOperationResponse(options)
    summary: Lists all of the pools in the specified account.
    fullName: azure-batch.Pool.listWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CloudPoolListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CloudPoolListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolListOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.poolListOptions.filter
          type:
            - string
          description: >-
            An OData $filter clause.

            For more information on constructing this filter, see

            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-pools.
          optional: true
        - id: options.poolListOptions.select
          type:
            - string
          description: An OData $select clause.
          optional: true
        - id: options.poolListOptions.expand
          type:
            - string
          description: An OData $expand clause.
          optional: true
        - id: options.poolListOptions.maxResults
          type:
            - number
          description: >-
            The maximum number of

            items to return in the response. A maximum of 1000 pools can be
            returned.
          optional: true
        - id: options.poolListOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.poolListOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolListOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.poolListOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-batch.Pool#list'
    id: 'azure-batch.Pool#list'
    parent: azure-batch.Pool
    name: 'list(options, optionalCallback)'
    summary: Lists all of the pools in the specified account.
    fullName: 'azure-batch.Pool.list(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CloudPoolListResult} - The deserialized result object.'
        value: '{CloudPoolListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CloudPoolListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CloudPoolListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolListOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.poolListOptions.filter
          type:
            - string
          description: >-
            An OData $filter clause.

            For more information on constructing this filter, see

            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-pools.
          optional: true
        - id: options.poolListOptions.select
          type:
            - string
          description: An OData $select clause.
          optional: true
        - id: options.poolListOptions.expand
          type:
            - string
          description: An OData $expand clause.
          optional: true
        - id: options.poolListOptions.maxResults
          type:
            - number
          description: >-
            The maximum number of

            items to return in the response. A maximum of 1000 pools can be
            returned.
          optional: true
        - id: options.poolListOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.poolListOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolListOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.poolListOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function list(options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Pool#deleteMethodWithHttpOperationResponse'
    id: 'azure-batch.Pool#deleteMethodWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: 'deleteMethodWithHttpOperationResponse(poolId, options)'
    summary: >-
      Deletes a pool from the specified account.


      When you request that a pool be deleted, the following actions occur: the

      pool state is set to deleting; any ongoing resize operation on the pool
      are

      stopped; the Batch service starts resizing the pool to zero nodes; any
      tasks

      running on existing nodes are terminated and requeued (as if a resize pool

      operation had been requested with the default requeue option); finally,
      the

      pool is removed from the system. Because running tasks are requeued, the

      user can rerun these tasks by updating their job to target a different
      pool.

      The tasks can then run on the new pool. If you want to override the
      requeue

      behavior, then you should call resize pool explicitly to shrink the pool
      to

      zero size before deleting the pool. If you call an Update, Patch or Delete

      API on a pool in the deleting state, it will fail with HTTP status code
      409

      with error code PoolBeingDeleted.
    fullName: 'azure-batch.Pool.deleteMethodWithHttpOperationResponse(poolId, options)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolDeleteMethodOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.poolDeleteMethodOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.poolDeleteMethodOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolDeleteMethodOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.poolDeleteMethodOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.poolDeleteMethodOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.poolDeleteMethodOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolDeleteMethodOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.poolDeleteMethodOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function deleteMethodWithHttpOperationResponse(poolId, options)'
    langs:
      - js
  - uid: 'azure-batch.Pool#deleteMethod'
    id: 'azure-batch.Pool#deleteMethod'
    parent: azure-batch.Pool
    name: 'deleteMethod(poolId, options, optionalCallback)'
    summary: >-
      Deletes a pool from the specified account.


      When you request that a pool be deleted, the following actions occur: the

      pool state is set to deleting; any ongoing resize operation on the pool
      are

      stopped; the Batch service starts resizing the pool to zero nodes; any
      tasks

      running on existing nodes are terminated and requeued (as if a resize pool

      operation had been requested with the default requeue option); finally,
      the

      pool is removed from the system. Because running tasks are requeued, the

      user can rerun these tasks by updating their job to target a different
      pool.

      The tasks can then run on the new pool. If you want to override the
      requeue

      behavior, then you should call resize pool explicitly to shrink the pool
      to

      zero size before deleting the pool. If you call an Update, Patch or Delete

      API on a pool in the deleting state, it will fail with HTTP status code
      409

      with error code PoolBeingDeleted.
    fullName: 'azure-batch.Pool.deleteMethod(poolId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolDeleteMethodOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.poolDeleteMethodOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.poolDeleteMethodOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolDeleteMethodOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.poolDeleteMethodOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.poolDeleteMethodOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.poolDeleteMethodOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolDeleteMethodOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.poolDeleteMethodOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function deleteMethod(poolId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Pool#existsWithHttpOperationResponse'
    id: 'azure-batch.Pool#existsWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: 'existsWithHttpOperationResponse(poolId, options)'
    summary: Gets basic properties of a pool.
    fullName: 'azure-batch.Pool.existsWithHttpOperationResponse(poolId, options)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Boolean>} - The deserialized result object.'
        value: '{HttpOperationResponse<Boolean>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to get.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolExistsOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.poolExistsOptions.timeout
          type:
            - number
          description: >-
            The maximum time that

            the server can spend processing the request, in seconds. The default
            is 30

            seconds.
          optional: true
        - id: options.poolExistsOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolExistsOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.poolExistsOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.poolExistsOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.poolExistsOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolExistsOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.poolExistsOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function existsWithHttpOperationResponse(poolId, options)'
    langs:
      - js
  - uid: 'azure-batch.Pool#exists'
    id: 'azure-batch.Pool#exists'
    parent: azure-batch.Pool
    name: 'exists(poolId, options, optionalCallback)'
    summary: Gets basic properties of a pool.
    fullName: 'azure-batch.Pool.exists(poolId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Boolean} - The deserialized result object.'
        value: '{Boolean} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {boolean} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {boolean} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to get.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolExistsOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.poolExistsOptions.timeout
          type:
            - number
          description: >-
            The maximum time that

            the server can spend processing the request, in seconds. The default
            is 30

            seconds.
          optional: true
        - id: options.poolExistsOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolExistsOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.poolExistsOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.poolExistsOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.poolExistsOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolExistsOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.poolExistsOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function exists(poolId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Pool#getWithHttpOperationResponse'
    id: 'azure-batch.Pool#getWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: 'getWithHttpOperationResponse(poolId, options)'
    summary: Gets information about the specified pool.
    fullName: 'azure-batch.Pool.getWithHttpOperationResponse(poolId, options)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<CloudPool>} - The deserialized result object.'
        value: '{HttpOperationResponse<CloudPool>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to get.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolGetOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.poolGetOptions.select
          type:
            - string
          description: An OData $select clause.
          optional: true
        - id: options.poolGetOptions.expand
          type:
            - string
          description: An OData $expand clause.
          optional: true
        - id: options.poolGetOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.poolGetOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolGetOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.poolGetOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.poolGetOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.poolGetOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolGetOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.poolGetOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getWithHttpOperationResponse(poolId, options)'
    langs:
      - js
  - uid: 'azure-batch.Pool#get'
    id: 'azure-batch.Pool#get'
    parent: azure-batch.Pool
    name: 'get(poolId, options, optionalCallback)'
    summary: Gets information about the specified pool.
    fullName: 'azure-batch.Pool.get(poolId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CloudPool} - The deserialized result object.'
        value: '{CloudPool} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CloudPool} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CloudPool} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to get.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolGetOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.poolGetOptions.select
          type:
            - string
          description: An OData $select clause.
          optional: true
        - id: options.poolGetOptions.expand
          type:
            - string
          description: An OData $expand clause.
          optional: true
        - id: options.poolGetOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.poolGetOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The caller-generated

            request identity, in the form of a GUID with no decoration such as
            curly

            braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolGetOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.poolGetOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.poolGetOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.poolGetOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolGetOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.poolGetOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function get(poolId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Pool#patchWithHttpOperationResponse'
    id: 'azure-batch.Pool#patchWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: 'patchWithHttpOperationResponse(poolId, poolPatchParameter, options)'
    summary: >-
      Updates the properties of the specified pool.


      This only replaces the pool properties specified in the request. For

      example, if the pool has a start task associated with it, and a request
      does

      not specify a start task element, then the pool keeps the existing start

      task.
    fullName: >-
      azure-batch.Pool.patchWithHttpOperationResponse(poolId,
      poolPatchParameter, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to update.
        - id: poolPatchParameter
          type:
            - object
          description: The parameters for the request.
        - id: poolPatchParameter.startTask
          type:
            - object
          description: >-
            A task to run on each compute

            node as it joins the pool. The task runs when the node is added to
            the pool

            or when the node is restarted. If this element is present, it
            overwrites any

            existing start task. If omitted, any existing start task is left
            unchanged.
          optional: true
        - id: poolPatchParameter.startTask.commandLine
          type:
            - string
          description: >-
            The command line of

            the start task. The command line does not run under a shell, and
            therefore

            cannot take advantage of shell features such as environment variable

            expansion. If you want to take advantage of such features, you
            should invoke

            the shell in the command line, for example using "cmd /c MyCommand"
            in

            Windows or "/bin/sh -c MyCommand" in Linux. If the command line
            refers to

            file paths, it should use a relative path (relative to the task
            working

            directory), or use the Batch provided environment variable

            (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
        - id: poolPatchParameter.startTask.containerSettings
          type:
            - object
          description: >-
            The

            settings for the container under which the start task runs. When
            this is

            specified, all directories recursively below the
            AZ_BATCH_NODE_ROOT_DIR (the

            root of Azure Batch directories on the node) are mapped into the
            container,

            all task environment variables are mapped into the container, and
            the task

            command line is executed in the container.
          optional: true
        - id: poolPatchParameter.startTask.containerSettings.containerRunOptions
          type:
            - string
          description: >-
            Additional options to the container create command. These additional
            options

            are supplied as arguments to the "docker create" command, in
            addition to

            those controlled by the Batch Service.
          optional: true
        - id: poolPatchParameter.startTask.containerSettings.imageName
          type:
            - string
          description: >-
            The

            image to use to create the container in which the task will run.
            This is the

            full image reference, as would be specified to "docker pull". If no
            tag is

            provided as part of the image name, the tag ":latest" is used as a
            default.
        - id: poolPatchParameter.startTask.containerSettings.registry
          type:
            - object
          description: >-
            The private registry which contains the container image. This
            setting can be

            omitted if was already provided at pool creation.
          optional: true
        - id: >-
            poolPatchParameter.startTask.containerSettings.registry.registryServer
          type:
            - string
          description: |-
            The
            registry URL. If omitted, the default is "docker.io".
          optional: true
        - id: poolPatchParameter.startTask.containerSettings.registry.userName
          type:
            - string
          description: |-
            The user
            name to log into the registry server.
        - id: poolPatchParameter.startTask.containerSettings.registry.password
          type:
            - string
          description: |-
            The
            password to log into the registry server.
        - id: poolPatchParameter.startTask.resourceFiles
          type:
            - array
          description: >-
            A list of files

            that the Batch service will download to the compute node before
            running the

            command line. Files listed under this element are located in the
            task's

            working directory.
          optional: true
        - id: poolPatchParameter.startTask.environmentSettings
          type:
            - array
          description: |-
            A list of
            environment variable settings for the start task.
          optional: true
        - id: poolPatchParameter.startTask.userIdentity
          type:
            - object
          description: >-
            The user

            identity under which the start task runs. If omitted, the task runs
            as a

            non-administrative user unique to the task.
          optional: true
        - id: poolPatchParameter.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The

            name of the user identity under which the task is run. The userName
            and

            autoUser properties are mutually exclusive; you must specify one but
            not

            both.
          optional: true
        - id: poolPatchParameter.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The

            auto user under which the task is run. The userName and autoUser
            properties

            are mutually exclusive; you must specify one but not both.
          optional: true
        - id: poolPatchParameter.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for the auto user The default value is task. Possible
            values

            include: 'task', 'pool'
          optional: true
        - id: poolPatchParameter.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The

            elevation level of the auto user. The default value is nonAdmin.
            Possible

            values include: 'nonAdmin', 'admin'
          optional: true
        - id: poolPatchParameter.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum

            number of times the task may be retried. The Batch service retries a
            task if

            its exit code is nonzero. Note that this value specifically controls
            the

            number of retries. The Batch service will try the task once, and may
            then

            retry up to this limit. For example, if the maximum retry count is
            3, Batch

            tries the task up to 4 times (one initial try and 3 retries). If the
            maximum

            retry count is 0, the Batch service does not retry the task. If the
            maximum

            retry count is -1, the Batch service retries the task without limit.
          optional: true
        - id: poolPatchParameter.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the

            Batch service should wait for the start task to complete
            successfully (that

            is, to exit with exit code 0) before scheduling any tasks on the
            compute

            node. If true and the start task fails on a compute node, the Batch
            service

            retries the start task up to its maximum retry count
            (maxTaskRetryCount). If

            the task has still not completed successfully after all retries,
            then the

            Batch service marks the compute node unusable, and will not schedule
            tasks

            to it. This condition can be detected via the node state and failure
            info

            details. If false, the Batch service will not wait for the start
            task to

            complete. In this case, other tasks can start executing on the
            compute node

            while the start task is still running; and even if the start task
            fails, new

            tasks will continue to be scheduled on the node. The default is
            false.
          optional: true
        - id: poolPatchParameter.certificateReferences
          type:
            - array
          description: >-
            A list of

            certificates to be installed on each compute node in the pool. If
            this

            element is present, it replaces any existing certificate references

            configured on the pool. If omitted, any existing certificate
            references are

            left unchanged. For Windows compute nodes, the Batch service
            installs the

            certificates to the specified certificate store and location. For
            Linux

            compute nodes, the certificates are stored in a directory inside the
            task

            working directory and an environment variable
            AZ_BATCH_CERTIFICATES_DIR is

            supplied to the task to query for this location. For certificates
            with

            visibility of 'remoteUser', a 'certs' directory is created in the
            user's

            home directory (e.g., /home/{user-name}/certs) and certificates are
            placed

            in that directory.
          optional: true
        - id: poolPatchParameter.applicationPackageReferences
          type:
            - array
          description: >-
            A list of

            application packages to be installed on each compute node in the
            pool.

            Changes to application package references affect all new compute
            nodes

            joining the pool, but do not affect compute nodes that are already
            in the

            pool until they are rebooted or reimaged. If this element is
            present, it

            replaces any existing application package references. If you specify
            an

            empty collection, then all application package references are
            removed from

            the pool. If omitted, any existing application package references
            are left

            unchanged.
          optional: true
        - id: poolPatchParameter.metadata
          type:
            - array
          description: >-
            A list of name-value pairs

            associated with the pool as metadata. If this element is present, it

            replaces any existing metadata configured on the pool. If you
            specify an

            empty collection, any metadata is removed from the pool. If omitted,
            any

            existing metadata is left unchanged.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolPatchOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.poolPatchOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.poolPatchOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolPatchOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.poolPatchOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.poolPatchOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.poolPatchOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolPatchOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.poolPatchOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function patchWithHttpOperationResponse(poolId, poolPatchParameter,
        options)
    langs:
      - js
  - uid: 'azure-batch.Pool#patch'
    id: 'azure-batch.Pool#patch'
    parent: azure-batch.Pool
    name: 'patch(poolId, poolPatchParameter, options, optionalCallback)'
    summary: >-
      Updates the properties of the specified pool.


      This only replaces the pool properties specified in the request. For

      example, if the pool has a start task associated with it, and a request
      does

      not specify a start task element, then the pool keeps the existing start

      task.
    fullName: >-
      azure-batch.Pool.patch(poolId, poolPatchParameter, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to update.
        - id: poolPatchParameter
          type:
            - object
          description: The parameters for the request.
        - id: poolPatchParameter.startTask
          type:
            - object
          description: >-
            A task to run on each compute

            node as it joins the pool. The task runs when the node is added to
            the pool

            or when the node is restarted. If this element is present, it
            overwrites any

            existing start task. If omitted, any existing start task is left
            unchanged.
          optional: true
        - id: poolPatchParameter.startTask.commandLine
          type:
            - string
          description: >-
            The command line of

            the start task. The command line does not run under a shell, and
            therefore

            cannot take advantage of shell features such as environment variable

            expansion. If you want to take advantage of such features, you
            should invoke

            the shell in the command line, for example using "cmd /c MyCommand"
            in

            Windows or "/bin/sh -c MyCommand" in Linux. If the command line
            refers to

            file paths, it should use a relative path (relative to the task
            working

            directory), or use the Batch provided environment variable

            (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
        - id: poolPatchParameter.startTask.containerSettings
          type:
            - object
          description: >-
            The

            settings for the container under which the start task runs. When
            this is

            specified, all directories recursively below the
            AZ_BATCH_NODE_ROOT_DIR (the

            root of Azure Batch directories on the node) are mapped into the
            container,

            all task environment variables are mapped into the container, and
            the task

            command line is executed in the container.
          optional: true
        - id: poolPatchParameter.startTask.containerSettings.containerRunOptions
          type:
            - string
          description: >-
            Additional options to the container create command. These additional
            options

            are supplied as arguments to the "docker create" command, in
            addition to

            those controlled by the Batch Service.
          optional: true
        - id: poolPatchParameter.startTask.containerSettings.imageName
          type:
            - string
          description: >-
            The

            image to use to create the container in which the task will run.
            This is the

            full image reference, as would be specified to "docker pull". If no
            tag is

            provided as part of the image name, the tag ":latest" is used as a
            default.
        - id: poolPatchParameter.startTask.containerSettings.registry
          type:
            - object
          description: >-
            The private registry which contains the container image. This
            setting can be

            omitted if was already provided at pool creation.
          optional: true
        - id: >-
            poolPatchParameter.startTask.containerSettings.registry.registryServer
          type:
            - string
          description: |-
            The
            registry URL. If omitted, the default is "docker.io".
          optional: true
        - id: poolPatchParameter.startTask.containerSettings.registry.userName
          type:
            - string
          description: |-
            The user
            name to log into the registry server.
        - id: poolPatchParameter.startTask.containerSettings.registry.password
          type:
            - string
          description: |-
            The
            password to log into the registry server.
        - id: poolPatchParameter.startTask.resourceFiles
          type:
            - array
          description: >-
            A list of files

            that the Batch service will download to the compute node before
            running the

            command line. Files listed under this element are located in the
            task's

            working directory.
          optional: true
        - id: poolPatchParameter.startTask.environmentSettings
          type:
            - array
          description: |-
            A list of
            environment variable settings for the start task.
          optional: true
        - id: poolPatchParameter.startTask.userIdentity
          type:
            - object
          description: >-
            The user

            identity under which the start task runs. If omitted, the task runs
            as a

            non-administrative user unique to the task.
          optional: true
        - id: poolPatchParameter.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The

            name of the user identity under which the task is run. The userName
            and

            autoUser properties are mutually exclusive; you must specify one but
            not

            both.
          optional: true
        - id: poolPatchParameter.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The

            auto user under which the task is run. The userName and autoUser
            properties

            are mutually exclusive; you must specify one but not both.
          optional: true
        - id: poolPatchParameter.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The scope for the auto user The default value is task. Possible
            values

            include: 'task', 'pool'
          optional: true
        - id: poolPatchParameter.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: >-
            The

            elevation level of the auto user. The default value is nonAdmin.
            Possible

            values include: 'nonAdmin', 'admin'
          optional: true
        - id: poolPatchParameter.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum

            number of times the task may be retried. The Batch service retries a
            task if

            its exit code is nonzero. Note that this value specifically controls
            the

            number of retries. The Batch service will try the task once, and may
            then

            retry up to this limit. For example, if the maximum retry count is
            3, Batch

            tries the task up to 4 times (one initial try and 3 retries). If the
            maximum

            retry count is 0, the Batch service does not retry the task. If the
            maximum

            retry count is -1, the Batch service retries the task without limit.
          optional: true
        - id: poolPatchParameter.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the

            Batch service should wait for the start task to complete
            successfully (that

            is, to exit with exit code 0) before scheduling any tasks on the
            compute

            node. If true and the start task fails on a compute node, the Batch
            service

            retries the start task up to its maximum retry count
            (maxTaskRetryCount). If

            the task has still not completed successfully after all retries,
            then the

            Batch service marks the compute node unusable, and will not schedule
            tasks

            to it. This condition can be detected via the node state and failure
            info

            details. If false, the Batch service will not wait for the start
            task to

            complete. In this case, other tasks can start executing on the
            compute node

            while the start task is still running; and even if the start task
            fails, new

            tasks will continue to be scheduled on the node. The default is
            false.
          optional: true
        - id: poolPatchParameter.certificateReferences
          type:
            - array
          description: >-
            A list of

            certificates to be installed on each compute node in the pool. If
            this

            element is present, it replaces any existing certificate references

            configured on the pool. If omitted, any existing certificate
            references are

            left unchanged. For Windows compute nodes, the Batch service
            installs the

            certificates to the specified certificate store and location. For
            Linux

            compute nodes, the certificates are stored in a directory inside the
            task

            working directory and an environment variable
            AZ_BATCH_CERTIFICATES_DIR is

            supplied to the task to query for this location. For certificates
            with

            visibility of 'remoteUser', a 'certs' directory is created in the
            user's

            home directory (e.g., /home/{user-name}/certs) and certificates are
            placed

            in that directory.
          optional: true
        - id: poolPatchParameter.applicationPackageReferences
          type:
            - array
          description: >-
            A list of

            application packages to be installed on each compute node in the
            pool.

            Changes to application package references affect all new compute
            nodes

            joining the pool, but do not affect compute nodes that are already
            in the

            pool until they are rebooted or reimaged. If this element is
            present, it

            replaces any existing application package references. If you specify
            an

            empty collection, then all application package references are
            removed from

            the pool. If omitted, any existing application package references
            are left

            unchanged.
          optional: true
        - id: poolPatchParameter.metadata
          type:
            - array
          description: >-
            A list of name-value pairs

            associated with the pool as metadata. If this element is present, it

            replaces any existing metadata configured on the pool. If you
            specify an

            empty collection, any metadata is removed from the pool. If omitted,
            any

            existing metadata is left unchanged.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolPatchOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.poolPatchOptions.timeout
          type:
            - number
          description: >-
            The maximum time that the

            server can spend processing the request, in seconds. The default is
            30

            seconds.
          optional: true
        - id: options.poolPatchOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolPatchOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.poolPatchOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.poolPatchOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.poolPatchOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolPatchOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.poolPatchOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function patch(poolId, poolPatchParameter, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Pool#disableAutoScaleWithHttpOperationResponse'
    id: 'azure-batch.Pool#disableAutoScaleWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: 'disableAutoScaleWithHttpOperationResponse(poolId, options)'
    summary: Disables automatic scaling for a pool.
    fullName: >-
      azure-batch.Pool.disableAutoScaleWithHttpOperationResponse(poolId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: |-
            The ID of the pool on which to disable automatic
            scaling.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolDisableAutoScaleOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.poolDisableAutoScaleOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: options.poolDisableAutoScaleOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolDisableAutoScaleOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.poolDisableAutoScaleOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function disableAutoScaleWithHttpOperationResponse(poolId, options)'
    langs:
      - js
  - uid: 'azure-batch.Pool#disableAutoScale'
    id: 'azure-batch.Pool#disableAutoScale'
    parent: azure-batch.Pool
    name: 'disableAutoScale(poolId, options, optionalCallback)'
    summary: Disables automatic scaling for a pool.
    fullName: 'azure-batch.Pool.disableAutoScale(poolId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: |-
            The ID of the pool on which to disable automatic
            scaling.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolDisableAutoScaleOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.poolDisableAutoScaleOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: options.poolDisableAutoScaleOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolDisableAutoScaleOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.poolDisableAutoScaleOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function disableAutoScale(poolId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Pool#enableAutoScaleWithHttpOperationResponse'
    id: 'azure-batch.Pool#enableAutoScaleWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: >-
      enableAutoScaleWithHttpOperationResponse(poolId,
      poolEnableAutoScaleParameter, options)
    summary: >-
      Enables automatic scaling for a pool.


      You cannot enable automatic scaling on a pool if a resize operation is in

      progress on the pool. If automatic scaling of the pool is currently

      disabled, you must specify a valid autoscale formula as part of the
      request.

      If automatic scaling of the pool is already enabled, you may specify a new

      autoscale formula and/or a new evaluation interval. You cannot call this
      API

      for the same pool more than once every 30 seconds.
    fullName: >-
      azure-batch.Pool.enableAutoScaleWithHttpOperationResponse(poolId,
      poolEnableAutoScaleParameter, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: |-
            The ID of the pool on which to enable automatic
            scaling.
        - id: poolEnableAutoScaleParameter
          type:
            - object
          description: The parameters for the request.
        - id: poolEnableAutoScaleParameter.autoScaleFormula
          type:
            - string
          description: >-
            The formula

            for the desired number of compute nodes in the pool. The formula is
            checked

            for validity before it is applied to the pool. If the formula is not
            valid,

            the Batch service rejects the request with detailed error
            information. For

            more information about specifying this formula, see Automatically
            scale

            compute nodes in an Azure Batch pool

            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
          optional: true
        - id: poolEnableAutoScaleParameter.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval

            at which to automatically adjust the pool size according to the
            autoscale

            formula. The default value is 15 minutes. The minimum and maximum
            value are

            5 minutes and 168 hours respectively. If you specify a value less
            than 5

            minutes or greater than 168 hours, the Batch service rejects the
            request

            with an invalid property value error; if you are calling the REST
            API

            directly, the HTTP status code is 400 (Bad Request). If you specify
            a new

            interval, then the existing autoscale evaluation schedule will be
            stopped

            and a new autoscale evaluation schedule will be started, with its
            starting

            time being the time when this request was issued.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolEnableAutoScaleOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.poolEnableAutoScaleOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: options.poolEnableAutoScaleOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolEnableAutoScaleOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.poolEnableAutoScaleOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.poolEnableAutoScaleOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.poolEnableAutoScaleOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag

            value associated with the version of the resource known to the
            client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolEnableAutoScaleOptions.ifModifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has been modified since the specified time.
          optional: true
        - id: options.poolEnableAutoScaleOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function enableAutoScaleWithHttpOperationResponse(poolId,
        poolEnableAutoScaleParameter, options)
    langs:
      - js
  - uid: 'azure-batch.Pool#enableAutoScale'
    id: 'azure-batch.Pool#enableAutoScale'
    parent: azure-batch.Pool
    name: >-
      enableAutoScale(poolId, poolEnableAutoScaleParameter, options,
      optionalCallback)
    summary: >-
      Enables automatic scaling for a pool.


      You cannot enable automatic scaling on a pool if a resize operation is in

      progress on the pool. If automatic scaling of the pool is currently

      disabled, you must specify a valid autoscale formula as part of the
      request.

      If automatic scaling of the pool is already enabled, you may specify a new

      autoscale formula and/or a new evaluation interval. You cannot call this
      API

      for the same pool more than once every 30 seconds.
    fullName: >-
      azure-batch.Pool.enableAutoScale(poolId, poolEnableAutoScaleParameter,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: |-
            The ID of the pool on which to enable automatic
            scaling.
        - id: poolEnableAutoScaleParameter
          type:
            - object
          description: The parameters for the request.
        - id: poolEnableAutoScaleParameter.autoScaleFormula
          type:
            - string
          description: >-
            The formula

            for the desired number of compute nodes in the pool. The formula is
            checked

            for validity before it is applied to the pool. If the formula is not
            valid,

            the Batch service rejects the request with detailed error
            information. For

            more information about specifying this formula, see Automatically
            scale

            compute nodes in an Azure Batch pool

            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
          optional: true
        - id: poolEnableAutoScaleParameter.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: >-
            The time interval

            at which to automatically adjust the pool size according to the
            autoscale

            formula. The default value is 15 minutes. The minimum and maximum
            value are

            5 minutes and 168 hours respectively. If you specify a value less
            than 5

            minutes or greater than 168 hours, the Batch service rejects the
            request

            with an invalid property value error; if you are calling the REST
            API

            directly, the HTTP status code is 400 (Bad Request). If you specify
            a new

            interval, then the existing autoscale evaluation schedule will be
            stopped

            and a new autoscale evaluation schedule will be started, with its
            starting

            time being the time when this request was issued.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolEnableAutoScaleOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.poolEnableAutoScaleOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: options.poolEnableAutoScaleOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolEnableAutoScaleOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.poolEnableAutoScaleOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.poolEnableAutoScaleOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.poolEnableAutoScaleOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag

            value associated with the version of the resource known to the
            client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolEnableAutoScaleOptions.ifModifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has been modified since the specified time.
          optional: true
        - id: options.poolEnableAutoScaleOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A

            timestamp indicating the last modified time of the resource known to
            the

            client. The operation will be performed only if the resource on the
            service

            has not been modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function enableAutoScale(poolId, poolEnableAutoScaleParameter, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-batch.Pool#evaluateAutoScaleWithHttpOperationResponse'
    id: 'azure-batch.Pool#evaluateAutoScaleWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: >-
      evaluateAutoScaleWithHttpOperationResponse(poolId, autoScaleFormula,
      options)
    summary: |-
      Gets the result of evaluating an automatic scaling formula on the
      pool.

      This API is primarily for validating an autoscale formula, as it simply
      returns the result without applying the formula to the pool. The pool must
      have auto scaling enabled in order to evaluate a formula.
    fullName: >-
      azure-batch.Pool.evaluateAutoScaleWithHttpOperationResponse(poolId,
      autoScaleFormula, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<AutoScaleRun>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<AutoScaleRun>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: |-
            The ID of the pool on which to evaluate the automatic
            scaling formula.
        - id: autoScaleFormula
          type:
            - string
          description: >-
            The formula for the desired number of

            compute nodes in the pool. The formula is validated and its results

            calculated, but it is not applied to the pool. To apply the formula
            to the

            pool, 'Enable automatic scaling on a pool'. For more information
            about

            specifying this formula, see Automatically scale compute nodes in an
            Azure

            Batch pool

            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolEvaluateAutoScaleOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.poolEvaluateAutoScaleOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: options.poolEvaluateAutoScaleOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolEvaluateAutoScaleOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.poolEvaluateAutoScaleOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function evaluateAutoScaleWithHttpOperationResponse(poolId,
        autoScaleFormula, options)
    langs:
      - js
  - uid: 'azure-batch.Pool#evaluateAutoScale'
    id: 'azure-batch.Pool#evaluateAutoScale'
    parent: azure-batch.Pool
    name: 'evaluateAutoScale(poolId, autoScaleFormula, options, optionalCallback)'
    summary: |-
      Gets the result of evaluating an automatic scaling formula on the
      pool.

      This API is primarily for validating an autoscale formula, as it simply
      returns the result without applying the formula to the pool. The pool must
      have auto scaling enabled in order to evaluate a formula.
    fullName: >-
      azure-batch.Pool.evaluateAutoScale(poolId, autoScaleFormula, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{AutoScaleRun} - The deserialized result object.'
        value: '{AutoScaleRun} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link AutoScaleRun} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link AutoScaleRun} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: |-
            The ID of the pool on which to evaluate the automatic
            scaling formula.
        - id: autoScaleFormula
          type:
            - string
          description: >-
            The formula for the desired number of

            compute nodes in the pool. The formula is validated and its results

            calculated, but it is not applied to the pool. To apply the formula
            to the

            pool, 'Enable automatic scaling on a pool'. For more information
            about

            specifying this formula, see Automatically scale compute nodes in an
            Azure

            Batch pool

            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolEvaluateAutoScaleOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.poolEvaluateAutoScaleOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: options.poolEvaluateAutoScaleOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolEvaluateAutoScaleOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.poolEvaluateAutoScaleOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function evaluateAutoScale(poolId, autoScaleFormula, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-batch.Pool#resizeWithHttpOperationResponse'
    id: 'azure-batch.Pool#resizeWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: 'resizeWithHttpOperationResponse(poolId, poolResizeParameter, options)'
    summary: >-
      Changes the number of compute nodes that are assigned to a pool.


      You can only resize a pool when its allocation state is steady. If the
      pool

      is already resizing, the request fails with status code 409. When you
      resize

      a pool, the pool's allocation state changes from steady to resizing. You

      cannot resize pools which are configured for automatic scaling. If you try

      to do this, the Batch service returns an error 409. If you resize a pool

      downwards, the Batch service chooses which nodes to remove. To remove

      specific nodes, use the pool remove nodes API instead.
    fullName: >-
      azure-batch.Pool.resizeWithHttpOperationResponse(poolId,
      poolResizeParameter, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to resize.
        - id: poolResizeParameter
          type:
            - object
          description: The parameters for the request.
        - id: poolResizeParameter.targetDedicatedNodes
          type:
            - number
          description: |-
            The desired
            number of dedicated compute nodes in the pool.
          optional: true
        - id: poolResizeParameter.targetLowPriorityNodes
          type:
            - number
          description: |-
            The desired
            number of low-priority compute nodes in the pool.
          optional: true
        - id: poolResizeParameter.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The timeout for

            allocation of compute nodes to the pool or removal of compute nodes
            from the

            pool. The default value is 15 minutes. The minimum value is 5
            minutes. If

            you specify a value less than 5 minutes, the Batch service returns
            an error;

            if you are calling the REST API directly, the HTTP status code is
            400 (Bad

            Request).
          optional: true
        - id: poolResizeParameter.nodeDeallocationOption
          type:
            - string
          description: >-
            Determines what

            to do with a node and its running task(s) if the pool size is
            decreasing.

            The default value is requeue. Possible values include: 'requeue',

            'terminate', 'taskCompletion', 'retainedData'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolResizeOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.poolResizeOptions.timeout
          type:
            - number
          description: >-
            The maximum time that

            the server can spend processing the request, in seconds. The default
            is 30

            seconds.
          optional: true
        - id: options.poolResizeOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolResizeOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.poolResizeOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.poolResizeOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.poolResizeOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolResizeOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.poolResizeOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function resizeWithHttpOperationResponse(poolId, poolResizeParameter,
        options)
    langs:
      - js
  - uid: 'azure-batch.Pool#resize'
    id: 'azure-batch.Pool#resize'
    parent: azure-batch.Pool
    name: 'resize(poolId, poolResizeParameter, options, optionalCallback)'
    summary: >-
      Changes the number of compute nodes that are assigned to a pool.


      You can only resize a pool when its allocation state is steady. If the
      pool

      is already resizing, the request fails with status code 409. When you
      resize

      a pool, the pool's allocation state changes from steady to resizing. You

      cannot resize pools which are configured for automatic scaling. If you try

      to do this, the Batch service returns an error 409. If you resize a pool

      downwards, the Batch service chooses which nodes to remove. To remove

      specific nodes, use the pool remove nodes API instead.
    fullName: >-
      azure-batch.Pool.resize(poolId, poolResizeParameter, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to resize.
        - id: poolResizeParameter
          type:
            - object
          description: The parameters for the request.
        - id: poolResizeParameter.targetDedicatedNodes
          type:
            - number
          description: |-
            The desired
            number of dedicated compute nodes in the pool.
          optional: true
        - id: poolResizeParameter.targetLowPriorityNodes
          type:
            - number
          description: |-
            The desired
            number of low-priority compute nodes in the pool.
          optional: true
        - id: poolResizeParameter.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The timeout for

            allocation of compute nodes to the pool or removal of compute nodes
            from the

            pool. The default value is 15 minutes. The minimum value is 5
            minutes. If

            you specify a value less than 5 minutes, the Batch service returns
            an error;

            if you are calling the REST API directly, the HTTP status code is
            400 (Bad

            Request).
          optional: true
        - id: poolResizeParameter.nodeDeallocationOption
          type:
            - string
          description: >-
            Determines what

            to do with a node and its running task(s) if the pool size is
            decreasing.

            The default value is requeue. Possible values include: 'requeue',

            'terminate', 'taskCompletion', 'retainedData'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolResizeOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.poolResizeOptions.timeout
          type:
            - number
          description: >-
            The maximum time that

            the server can spend processing the request, in seconds. The default
            is 30

            seconds.
          optional: true
        - id: options.poolResizeOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolResizeOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.poolResizeOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.poolResizeOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value associated

            with the version of the resource known to the client. The operation
            will be

            performed only if the resource's current ETag on the service exactly
            matches

            the value specified by the client.
          optional: true
        - id: options.poolResizeOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolResizeOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.poolResizeOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function resize(poolId, poolResizeParameter, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Pool#stopResizeWithHttpOperationResponse'
    id: 'azure-batch.Pool#stopResizeWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: 'stopResizeWithHttpOperationResponse(poolId, options)'
    summary: >-
      Stops an ongoing resize operation on the pool.


      This does not restore the pool to its previous state before the resize

      operation: it only stops any further changes being made, and the pool

      maintains its current state. After stopping, the pool stabilizes at the

      number of nodes it was at when the stop operation was done. During the
      stop

      operation, the pool allocation state changes first to stopping and then to

      steady. A resize operation need not be an explicit resize pool request;
      this

      API can also be used to halt the initial sizing of the pool when it is

      created.
    fullName: 'azure-batch.Pool.stopResizeWithHttpOperationResponse(poolId, options)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool whose resizing you want to stop.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolStopResizeOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.poolStopResizeOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.poolStopResizeOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolStopResizeOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.poolStopResizeOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.poolStopResizeOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.poolStopResizeOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolStopResizeOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.poolStopResizeOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function stopResizeWithHttpOperationResponse(poolId, options)'
    langs:
      - js
  - uid: 'azure-batch.Pool#stopResize'
    id: 'azure-batch.Pool#stopResize'
    parent: azure-batch.Pool
    name: 'stopResize(poolId, options, optionalCallback)'
    summary: >-
      Stops an ongoing resize operation on the pool.


      This does not restore the pool to its previous state before the resize

      operation: it only stops any further changes being made, and the pool

      maintains its current state. After stopping, the pool stabilizes at the

      number of nodes it was at when the stop operation was done. During the
      stop

      operation, the pool allocation state changes first to stopping and then to

      steady. A resize operation need not be an explicit resize pool request;
      this

      API can also be used to halt the initial sizing of the pool when it is

      created.
    fullName: 'azure-batch.Pool.stopResize(poolId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool whose resizing you want to stop.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolStopResizeOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.poolStopResizeOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.poolStopResizeOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolStopResizeOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.poolStopResizeOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.poolStopResizeOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.poolStopResizeOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolStopResizeOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.poolStopResizeOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function stopResize(poolId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Pool#updatePropertiesWithHttpOperationResponse'
    id: 'azure-batch.Pool#updatePropertiesWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: >-
      updatePropertiesWithHttpOperationResponse(poolId,
      poolUpdatePropertiesParameter, options)
    summary: >-
      Updates the properties of the specified pool.


      This fully replaces all the updateable properties of the pool. For
      example,

      if the pool has a start task associated with it and if start task is not

      specified with this request, then the Batch service will remove the
      existing

      start task.
    fullName: >-
      azure-batch.Pool.updatePropertiesWithHttpOperationResponse(poolId,
      poolUpdatePropertiesParameter, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to update.
        - id: poolUpdatePropertiesParameter
          type:
            - object
          description: |-
            The parameters for the
            request.
        - id: poolUpdatePropertiesParameter.startTask
          type:
            - object
          description: >-
            A task to run on

            each compute node as it joins the pool. The task runs when the node
            is added

            to the pool or when the node is restarted. If this element is
            present, it

            overwrites any existing start task. If omitted, any existing start
            task is

            removed from the pool.
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.commandLine
          type:
            - string
          description: >-
            The

            command line of the start task. The command line does not run under
            a shell,

            and therefore cannot take advantage of shell features such as
            environment

            variable expansion. If you want to take advantage of such features,
            you

            should invoke the shell in the command line, for example using "cmd
            /c

            MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the
            command

            line refers to file paths, it should use a relative path (relative
            to the

            task working directory), or use the Batch provided environment
            variable

            (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
        - id: poolUpdatePropertiesParameter.startTask.containerSettings
          type:
            - object
          description: >-
            The settings for the container under which the start task runs. When
            this is

            specified, all directories recursively below the
            AZ_BATCH_NODE_ROOT_DIR (the

            root of Azure Batch directories on the node) are mapped into the
            container,

            all task environment variables are mapped into the container, and
            the task

            command line is executed in the container.
          optional: true
        - id: >-
            poolUpdatePropertiesParameter.startTask.containerSettings.containerRunOptions
          type:
            - string
          description: >-
            Additional options to the container create command. These additional
            options

            are supplied as arguments to the "docker create" command, in
            addition to

            those controlled by the Batch Service.
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.containerSettings.imageName
          type:
            - string
          description: >-
            The

            image to use to create the container in which the task will run.
            This is the

            full image reference, as would be specified to "docker pull". If no
            tag is

            provided as part of the image name, the tag ":latest" is used as a
            default.
        - id: poolUpdatePropertiesParameter.startTask.containerSettings.registry
          type:
            - object
          description: >-
            The

            private registry which contains the container image. This setting
            can be

            omitted if was already provided at pool creation.
          optional: true
        - id: >-
            poolUpdatePropertiesParameter.startTask.containerSettings.registry.registryServer
          type:
            - string
          description: 'The registry URL. If omitted, the default is "docker.io".'
          optional: true
        - id: >-
            poolUpdatePropertiesParameter.startTask.containerSettings.registry.userName
          type:
            - string
          description: The user name to log into the registry server.
        - id: >-
            poolUpdatePropertiesParameter.startTask.containerSettings.registry.password
          type:
            - string
          description: The password to log into the registry server.
        - id: poolUpdatePropertiesParameter.startTask.resourceFiles
          type:
            - array
          description: >-
            A

            list of files that the Batch service will download to the compute
            node

            before running the command line. Files listed under this element are
            located

            in the task's working directory.
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.userIdentity
          type:
            - object
          description: >-
            The

            user identity under which the start task runs. If omitted, the task
            runs as

            a non-administrative user unique to the task.
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The name of

            the user identity under which the task is run. The userName and
            autoUser

            properties are mutually exclusive; you must specify one but not
            both.
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto

            user under which the task is run. The userName and autoUser
            properties are

            mutually exclusive; you must specify one but not both.
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The

            scope for the auto user The default value is task. Possible values
            include:

            'task', 'pool'
          optional: true
        - id: >-
            poolUpdatePropertiesParameter.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: |-
            The elevation level of the auto user. The default value is nonAdmin.
            Possible values include: 'nonAdmin', 'admin'
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the start task to complete

            successfully (that is, to exit with exit code 0) before scheduling
            any tasks

            on the compute node. If true and the start task fails on a compute
            node, the

            Batch service retries the start task up to its maximum retry count

            (maxTaskRetryCount). If the task has still not completed
            successfully after

            all retries, then the Batch service marks the compute node unusable,
            and

            will not schedule tasks to it. This condition can be detected via
            the node

            state and failure info details. If false, the Batch service will not
            wait

            for the start task to complete. In this case, other tasks can start

            executing on the compute node while the start task is still running;
            and

            even if the start task fails, new tasks will continue to be
            scheduled on the

            node. The default is false.
          optional: true
        - id: poolUpdatePropertiesParameter.certificateReferences
          type:
            - array
          description: >-
            A list of

            certificates to be installed on each compute node in the pool. This
            list

            replaces any existing certificate references configured on the pool.
            If you

            specify an empty collection, any existing certificate references are
            removed

            from the pool. For Windows compute nodes, the Batch service installs
            the

            certificates to the specified certificate store and location. For
            Linux

            compute nodes, the certificates are stored in a directory inside the
            task

            working directory and an environment variable
            AZ_BATCH_CERTIFICATES_DIR is

            supplied to the task to query for this location. For certificates
            with

            visibility of 'remoteUser', a 'certs' directory is created in the
            user's

            home directory (e.g., /home/{user-name}/certs) and certificates are
            placed

            in that directory.
        - id: poolUpdatePropertiesParameter.applicationPackageReferences
          type:
            - array
          description: >-
            A

            list of application packages to be installed on each compute node in
            the

            pool. The list replaces any existing application package references
            on the

            pool. Changes to application package references affect all new
            compute nodes

            joining the pool, but do not affect compute nodes that are already
            in the

            pool until they are rebooted or reimaged. If omitted, or if you
            specify an

            empty collection, any existing application packages references are
            removed

            from the pool.
        - id: poolUpdatePropertiesParameter.metadata
          type:
            - array
          description: >-
            A list of name-value

            pairs associated with the pool as metadata. This list replaces any
            existing

            metadata configured on the pool. If omitted, or if you specify an
            empty

            collection, any existing metadata is removed from the pool.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolUpdatePropertiesOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.poolUpdatePropertiesOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: options.poolUpdatePropertiesOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolUpdatePropertiesOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.poolUpdatePropertiesOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updatePropertiesWithHttpOperationResponse(poolId,
        poolUpdatePropertiesParameter, options)
    langs:
      - js
  - uid: 'azure-batch.Pool#updateProperties'
    id: 'azure-batch.Pool#updateProperties'
    parent: azure-batch.Pool
    name: >-
      updateProperties(poolId, poolUpdatePropertiesParameter, options,
      optionalCallback)
    summary: >-
      Updates the properties of the specified pool.


      This fully replaces all the updateable properties of the pool. For
      example,

      if the pool has a start task associated with it and if start task is not

      specified with this request, then the Batch service will remove the
      existing

      start task.
    fullName: >-
      azure-batch.Pool.updateProperties(poolId, poolUpdatePropertiesParameter,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to update.
        - id: poolUpdatePropertiesParameter
          type:
            - object
          description: |-
            The parameters for the
            request.
        - id: poolUpdatePropertiesParameter.startTask
          type:
            - object
          description: >-
            A task to run on

            each compute node as it joins the pool. The task runs when the node
            is added

            to the pool or when the node is restarted. If this element is
            present, it

            overwrites any existing start task. If omitted, any existing start
            task is

            removed from the pool.
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.commandLine
          type:
            - string
          description: >-
            The

            command line of the start task. The command line does not run under
            a shell,

            and therefore cannot take advantage of shell features such as
            environment

            variable expansion. If you want to take advantage of such features,
            you

            should invoke the shell in the command line, for example using "cmd
            /c

            MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the
            command

            line refers to file paths, it should use a relative path (relative
            to the

            task working directory), or use the Batch provided environment
            variable

            (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
        - id: poolUpdatePropertiesParameter.startTask.containerSettings
          type:
            - object
          description: >-
            The settings for the container under which the start task runs. When
            this is

            specified, all directories recursively below the
            AZ_BATCH_NODE_ROOT_DIR (the

            root of Azure Batch directories on the node) are mapped into the
            container,

            all task environment variables are mapped into the container, and
            the task

            command line is executed in the container.
          optional: true
        - id: >-
            poolUpdatePropertiesParameter.startTask.containerSettings.containerRunOptions
          type:
            - string
          description: >-
            Additional options to the container create command. These additional
            options

            are supplied as arguments to the "docker create" command, in
            addition to

            those controlled by the Batch Service.
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.containerSettings.imageName
          type:
            - string
          description: >-
            The

            image to use to create the container in which the task will run.
            This is the

            full image reference, as would be specified to "docker pull". If no
            tag is

            provided as part of the image name, the tag ":latest" is used as a
            default.
        - id: poolUpdatePropertiesParameter.startTask.containerSettings.registry
          type:
            - object
          description: >-
            The

            private registry which contains the container image. This setting
            can be

            omitted if was already provided at pool creation.
          optional: true
        - id: >-
            poolUpdatePropertiesParameter.startTask.containerSettings.registry.registryServer
          type:
            - string
          description: 'The registry URL. If omitted, the default is "docker.io".'
          optional: true
        - id: >-
            poolUpdatePropertiesParameter.startTask.containerSettings.registry.userName
          type:
            - string
          description: The user name to log into the registry server.
        - id: >-
            poolUpdatePropertiesParameter.startTask.containerSettings.registry.password
          type:
            - string
          description: The password to log into the registry server.
        - id: poolUpdatePropertiesParameter.startTask.resourceFiles
          type:
            - array
          description: >-
            A

            list of files that the Batch service will download to the compute
            node

            before running the command line. Files listed under this element are
            located

            in the task's working directory.
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.userIdentity
          type:
            - object
          description: >-
            The

            user identity under which the start task runs. If omitted, the task
            runs as

            a non-administrative user unique to the task.
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.userIdentity.userName
          type:
            - string
          description: >-
            The name of

            the user identity under which the task is run. The userName and
            autoUser

            properties are mutually exclusive; you must specify one but not
            both.
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.userIdentity.autoUser
          type:
            - object
          description: >-
            The auto

            user under which the task is run. The userName and autoUser
            properties are

            mutually exclusive; you must specify one but not both.
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: >-
            The

            scope for the auto user The default value is task. Possible values
            include:

            'task', 'pool'
          optional: true
        - id: >-
            poolUpdatePropertiesParameter.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: |-
            The elevation level of the auto user. The default value is nonAdmin.
            Possible values include: 'nonAdmin', 'admin'
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.maxTaskRetryCount
          type:
            - number
          description: >-
            The maximum number of times the task may be retried. The Batch
            service

            retries a task if its exit code is nonzero. Note that this value

            specifically controls the number of retries. The Batch service will
            try the

            task once, and may then retry up to this limit. For example, if the
            maximum

            retry count is 3, Batch tries the task up to 4 times (one initial
            try and 3

            retries). If the maximum retry count is 0, the Batch service does
            not retry

            the task. If the maximum retry count is -1, the Batch service
            retries the

            task without limit.
          optional: true
        - id: poolUpdatePropertiesParameter.startTask.waitForSuccess
          type:
            - boolean
          description: >-
            Whether the Batch service should wait for the start task to complete

            successfully (that is, to exit with exit code 0) before scheduling
            any tasks

            on the compute node. If true and the start task fails on a compute
            node, the

            Batch service retries the start task up to its maximum retry count

            (maxTaskRetryCount). If the task has still not completed
            successfully after

            all retries, then the Batch service marks the compute node unusable,
            and

            will not schedule tasks to it. This condition can be detected via
            the node

            state and failure info details. If false, the Batch service will not
            wait

            for the start task to complete. In this case, other tasks can start

            executing on the compute node while the start task is still running;
            and

            even if the start task fails, new tasks will continue to be
            scheduled on the

            node. The default is false.
          optional: true
        - id: poolUpdatePropertiesParameter.certificateReferences
          type:
            - array
          description: >-
            A list of

            certificates to be installed on each compute node in the pool. This
            list

            replaces any existing certificate references configured on the pool.
            If you

            specify an empty collection, any existing certificate references are
            removed

            from the pool. For Windows compute nodes, the Batch service installs
            the

            certificates to the specified certificate store and location. For
            Linux

            compute nodes, the certificates are stored in a directory inside the
            task

            working directory and an environment variable
            AZ_BATCH_CERTIFICATES_DIR is

            supplied to the task to query for this location. For certificates
            with

            visibility of 'remoteUser', a 'certs' directory is created in the
            user's

            home directory (e.g., /home/{user-name}/certs) and certificates are
            placed

            in that directory.
        - id: poolUpdatePropertiesParameter.applicationPackageReferences
          type:
            - array
          description: >-
            A

            list of application packages to be installed on each compute node in
            the

            pool. The list replaces any existing application package references
            on the

            pool. Changes to application package references affect all new
            compute nodes

            joining the pool, but do not affect compute nodes that are already
            in the

            pool until they are rebooted or reimaged. If omitted, or if you
            specify an

            empty collection, any existing application packages references are
            removed

            from the pool.
        - id: poolUpdatePropertiesParameter.metadata
          type:
            - array
          description: >-
            A list of name-value

            pairs associated with the pool as metadata. This list replaces any
            existing

            metadata configured on the pool. If omitted, or if you specify an
            empty

            collection, any existing metadata is removed from the pool.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolUpdatePropertiesOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.poolUpdatePropertiesOptions.timeout
          type:
            - number
          description: >-
            The maximum

            time that the server can spend processing the request, in seconds.
            The

            default is 30 seconds.
          optional: true
        - id: options.poolUpdatePropertiesOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolUpdatePropertiesOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.poolUpdatePropertiesOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateProperties(poolId, poolUpdatePropertiesParameter,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-batch.Pool#upgradeOSWithHttpOperationResponse'
    id: 'azure-batch.Pool#upgradeOSWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: 'upgradeOSWithHttpOperationResponse(poolId, targetOSVersion, options)'
    summary: >-
      Upgrades the operating system of the specified pool.


      During an upgrade, the Batch service upgrades each compute node in the
      pool.

      When a compute node is chosen for upgrade, any tasks running on that node

      are removed from the node and returned to the queue to be rerun later (or
      on

      a different compute node). The node will be unavailable until the upgrade
      is

      complete. This operation results in temporarily reduced pool capacity as

      nodes are taken out of service to be upgraded. Although the Batch service

      tries to avoid upgrading all compute nodes at the same time, it does not

      guarantee to do this (particularly on small pools); therefore, the pool
      may

      be temporarily unavailable to run tasks. When this operation runs, the
      pool

      state changes to upgrading. When all compute nodes have finished
      upgrading,

      the pool state returns to active. While the upgrade is in progress, the

      pool's currentOSVersion reflects the OS version that nodes are upgrading

      from, and targetOSVersion reflects the OS version that nodes are upgrading

      to. Once the upgrade is complete, currentOSVersion is updated to reflect
      the

      OS version now running on all nodes. This operation can only be invoked on

      pools created with the cloudServiceConfiguration property.
    fullName: >-
      azure-batch.Pool.upgradeOSWithHttpOperationResponse(poolId,
      targetOSVersion, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to upgrade.
        - id: targetOSVersion
          type:
            - string
          description: |-
            The Azure Guest OS version to be installed
            on the virtual machines in the pool.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolUpgradeOSOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.poolUpgradeOSOptions.timeout
          type:
            - number
          description: >-
            The maximum time that

            the server can spend processing the request, in seconds. The default
            is 30

            seconds.
          optional: true
        - id: options.poolUpgradeOSOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolUpgradeOSOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.poolUpgradeOSOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.poolUpgradeOSOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.poolUpgradeOSOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolUpgradeOSOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.poolUpgradeOSOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function upgradeOSWithHttpOperationResponse(poolId, targetOSVersion,
        options)
    langs:
      - js
  - uid: 'azure-batch.Pool#upgradeOS'
    id: 'azure-batch.Pool#upgradeOS'
    parent: azure-batch.Pool
    name: 'upgradeOS(poolId, targetOSVersion, options, optionalCallback)'
    summary: >-
      Upgrades the operating system of the specified pool.


      During an upgrade, the Batch service upgrades each compute node in the
      pool.

      When a compute node is chosen for upgrade, any tasks running on that node

      are removed from the node and returned to the queue to be rerun later (or
      on

      a different compute node). The node will be unavailable until the upgrade
      is

      complete. This operation results in temporarily reduced pool capacity as

      nodes are taken out of service to be upgraded. Although the Batch service

      tries to avoid upgrading all compute nodes at the same time, it does not

      guarantee to do this (particularly on small pools); therefore, the pool
      may

      be temporarily unavailable to run tasks. When this operation runs, the
      pool

      state changes to upgrading. When all compute nodes have finished
      upgrading,

      the pool state returns to active. While the upgrade is in progress, the

      pool's currentOSVersion reflects the OS version that nodes are upgrading

      from, and targetOSVersion reflects the OS version that nodes are upgrading

      to. Once the upgrade is complete, currentOSVersion is updated to reflect
      the

      OS version now running on all nodes. This operation can only be invoked on

      pools created with the cloudServiceConfiguration property.
    fullName: >-
      azure-batch.Pool.upgradeOS(poolId, targetOSVersion, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool to upgrade.
        - id: targetOSVersion
          type:
            - string
          description: |-
            The Azure Guest OS version to be installed
            on the virtual machines in the pool.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolUpgradeOSOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.poolUpgradeOSOptions.timeout
          type:
            - number
          description: >-
            The maximum time that

            the server can spend processing the request, in seconds. The default
            is 30

            seconds.
          optional: true
        - id: options.poolUpgradeOSOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolUpgradeOSOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.poolUpgradeOSOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.poolUpgradeOSOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.poolUpgradeOSOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolUpgradeOSOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.poolUpgradeOSOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function upgradeOS(poolId, targetOSVersion, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Pool#removeNodesWithHttpOperationResponse'
    id: 'azure-batch.Pool#removeNodesWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: 'removeNodesWithHttpOperationResponse(poolId, nodeRemoveParameter, options)'
    summary: >-
      Removes compute nodes from the specified pool.


      This operation can only run when the allocation state of the pool is
      steady.

      When this operation runs, the allocation state changes from steady to

      resizing.
    fullName: >-
      azure-batch.Pool.removeNodesWithHttpOperationResponse(poolId,
      nodeRemoveParameter, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: |-
            The ID of the pool from which you want to remove
            nodes.
        - id: nodeRemoveParameter
          type:
            - object
          description: The parameters for the request.
        - id: nodeRemoveParameter.nodeList
          type:
            - array
          description: |-
            A list containing the IDs of the
            compute nodes to be removed from the specified pool.
        - id: nodeRemoveParameter.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The timeout for

            removal of compute nodes to the pool. The default value is 15
            minutes. The

            minimum value is 5 minutes. If you specify a value less than 5
            minutes, the

            Batch service returns an error; if you are calling the REST API
            directly,

            the HTTP status code is 400 (Bad Request).
          optional: true
        - id: nodeRemoveParameter.nodeDeallocationOption
          type:
            - string
          description: >-
            Determines what

            to do with a node and its running task(s) after it has been selected
            for

            deallocation. The default value is requeue. Possible values include:

            'requeue', 'terminate', 'taskCompletion', 'retainedData'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolRemoveNodesOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.poolRemoveNodesOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.poolRemoveNodesOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolRemoveNodesOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.poolRemoveNodesOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.poolRemoveNodesOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.poolRemoveNodesOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolRemoveNodesOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.poolRemoveNodesOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function removeNodesWithHttpOperationResponse(poolId,
        nodeRemoveParameter, options)
    langs:
      - js
  - uid: 'azure-batch.Pool#removeNodes'
    id: 'azure-batch.Pool#removeNodes'
    parent: azure-batch.Pool
    name: 'removeNodes(poolId, nodeRemoveParameter, options, optionalCallback)'
    summary: >-
      Removes compute nodes from the specified pool.


      This operation can only run when the allocation state of the pool is
      steady.

      When this operation runs, the allocation state changes from steady to

      resizing.
    fullName: >-
      azure-batch.Pool.removeNodes(poolId, nodeRemoveParameter, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: |-
            The ID of the pool from which you want to remove
            nodes.
        - id: nodeRemoveParameter
          type:
            - object
          description: The parameters for the request.
        - id: nodeRemoveParameter.nodeList
          type:
            - array
          description: |-
            A list containing the IDs of the
            compute nodes to be removed from the specified pool.
        - id: nodeRemoveParameter.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: >-
            The timeout for

            removal of compute nodes to the pool. The default value is 15
            minutes. The

            minimum value is 5 minutes. If you specify a value less than 5
            minutes, the

            Batch service returns an error; if you are calling the REST API
            directly,

            the HTTP status code is 400 (Bad Request).
          optional: true
        - id: nodeRemoveParameter.nodeDeallocationOption
          type:
            - string
          description: >-
            Determines what

            to do with a node and its running task(s) after it has been selected
            for

            deallocation. The default value is requeue. Possible values include:

            'requeue', 'terminate', 'taskCompletion', 'retainedData'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolRemoveNodesOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.poolRemoveNodesOptions.timeout
          type:
            - number
          description: >-
            The maximum time

            that the server can spend processing the request, in seconds. The
            default is

            30 seconds.
          optional: true
        - id: options.poolRemoveNodesOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolRemoveNodesOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.poolRemoveNodesOptions.ocpDate
          type:
            - date
          description: >-
            The time the request

            was issued. Client libraries typically set this to the current
            system clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.poolRemoveNodesOptions.ifMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service exactly matches the value specified by the client.
          optional: true
        - id: options.poolRemoveNodesOptions.ifNoneMatch
          type:
            - string
          description: >-
            An ETag value

            associated with the version of the resource known to the client. The

            operation will be performed only if the resource's current ETag on
            the

            service does not match the value specified by the client.
          optional: true
        - id: options.poolRemoveNodesOptions.ifModifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            been

            modified since the specified time.
          optional: true
        - id: options.poolRemoveNodesOptions.ifUnmodifiedSince
          type:
            - date
          description: >-
            A timestamp

            indicating the last modified time of the resource known to the
            client. The

            operation will be performed only if the resource on the service has
            not been

            modified since the specified time.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function removeNodes(poolId, nodeRemoveParameter, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-batch.Pool#listUsageMetricsNextWithHttpOperationResponse'
    id: 'azure-batch.Pool#listUsageMetricsNextWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: 'listUsageMetricsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: >-
      Lists the usage metrics, aggregated by pool across individual time

      intervals, for the specified account.


      If you do not specify a $filter clause including a poolId, the response

      includes all pools that existed in the account in the time range of the

      returned aggregation intervals. If you do not specify a $filter clause

      including a startTime or endTime these filters default to the start and
      end

      times of the last aggregation interval currently available; that is, only

      the last aggregation interval is returned.
    fullName: >-
      azure-batch.Pool.listUsageMetricsNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PoolListUsageMetricsResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<PoolListUsageMetricsResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolListUsageMetricsNextOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.poolListUsageMetricsNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolListUsageMetricsNextOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.poolListUsageMetricsNextOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listUsageMetricsNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-batch.Pool#listUsageMetricsNext'
    id: 'azure-batch.Pool#listUsageMetricsNext'
    parent: azure-batch.Pool
    name: 'listUsageMetricsNext(nextPageLink, options, optionalCallback)'
    summary: >-
      Lists the usage metrics, aggregated by pool across individual time

      intervals, for the specified account.


      If you do not specify a $filter clause including a poolId, the response

      includes all pools that existed in the account in the time range of the

      returned aggregation intervals. If you do not specify a $filter clause

      including a startTime or endTime these filters default to the start and
      end

      times of the last aggregation interval currently available; that is, only

      the last aggregation interval is returned.
    fullName: >-
      azure-batch.Pool.listUsageMetricsNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PoolListUsageMetricsResult} - The deserialized result object.'
        value: '{PoolListUsageMetricsResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link PoolListUsageMetricsResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link PoolListUsageMetricsResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolListUsageMetricsNextOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.poolListUsageMetricsNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolListUsageMetricsNextOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether the
            server should return the client-request-id in the response.
          optional: true
        - id: options.poolListUsageMetricsNextOptions.ocpDate
          type:
            - date
          description: >-
            The time the

            request was issued. Client libraries typically set this to the
            current

            system clock time; set it explicitly if you are calling the REST API

            directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listUsageMetricsNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Pool#listNextWithHttpOperationResponse'
    id: 'azure-batch.Pool#listNextWithHttpOperationResponse'
    parent: azure-batch.Pool
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Lists all of the pools in the specified account.
    fullName: 'azure-batch.Pool.listNextWithHttpOperationResponse(nextPageLink, options)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CloudPoolListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CloudPoolListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolListNextOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.poolListNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolListNextOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.poolListNextOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-batch.Pool#listNext'
    id: 'azure-batch.Pool#listNext'
    parent: azure-batch.Pool
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: Lists all of the pools in the specified account.
    fullName: 'azure-batch.Pool.listNext(nextPageLink, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CloudPoolListResult} - The deserialized result object.'
        value: '{CloudPoolListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CloudPoolListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CloudPoolListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.poolListNextOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.poolListNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: >-
            The

            caller-generated request identity, in the form of a GUID with no
            decoration

            such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          optional: true
        - id: options.poolListNextOptions.returnClientRequestId
          type:
            - boolean
          description: |-
            Whether
            the server should return the client-request-id in the response.
          optional: true
        - id: options.poolListNextOptions.ocpDate
          type:
            - date
          description: >-
            The time the request was

            issued. Client libraries typically set this to the current system
            clock

            time; set it explicitly if you are calling the REST API directly.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js

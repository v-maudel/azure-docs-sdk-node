### YamlMime:UniversalReference
items:
  - uid: azure-batch.JobPreparationTask
    id: azure-batch.JobPreparationTask
    name: JobPreparationTask
    summary: >-
      A Job Preparation task to run before any tasks of the job on any

      given compute node.


      You can use Job Preparation to prepare a compute node to run tasks for the

      job. Activities commonly performed in Job Preparation include: Downloading

      common resource files used by all the tasks in the job. The Job
      Preparation

      task can download these common resource files to the shared location on
      the

      compute node. (AZ_BATCH_NODE_ROOT_DIR\shared), or starting a local service

      on the compute node so that all tasks of that job can communicate with it.

      If the Job Preparation task fails (that is, exhausts its retry count
      before

      exiting with exit code 0), Batch will not run tasks of this job on the

      compute node. The node remains ineligible to run tasks of this job until
      it

      is reimaged. The node remains active and can be used for other jobs. The
      Job

      Preparation task can run multiple times on the same compute node.
      Therefore,

      you should write the Job Preparation task to handle re-execution. If the

      compute node is rebooted, the Job Preparation task is run again on the
      node

      before scheduling any other task of the job, if

      rerunOnNodeRebootAfterSuccess is true or if the Job Preparation task did
      not

      previously complete. If the compute node is reimaged, the Job Preparation

      task is run again before scheduling any task of the job. Batch will retry

      tasks when a recovery operation is triggered on a compute node. Examples
      of

      recovery operations include (but are not limited to) when an unhealthy

      compute node is rebooted or a compute node disappeared due to host
      failure.

      Retries due to recovery operations are independent of and are not counted

      against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an

      internal retry due to a recovery operation may occur. Because of this, all

      tasks should be idempotent. This means tasks need to tolerate being

      interrupted and restarted without causing any corruption or duplicate
      data.

      The best practice for long running tasks is to use some form of

      checkpointing.
    fullName: azure-batch.JobPreparationTask
    type: Class
    children:
      - 'azure-batch.JobPreparationTask.#ctor'
      - 'azure-batch.JobPreparationTask#mapper'
    langs:
      - js
  - id: 'azure-batch.JobPreparationTask.#ctor'
    uid: 'azure-batch.JobPreparationTask.#ctor'
    parent: azure-batch.JobPreparationTask
    name: JobPreparationTask()
    fullName: azure-batch.JobPreparationTask.JobPreparationTask()
    summary: ''
    type: Constructor
    syntax:
      content: new JobPreparationTask()
    langs:
      - js
  - uid: 'azure-batch.JobPreparationTask#mapper'
    id: 'azure-batch.JobPreparationTask#mapper'
    parent: azure-batch.JobPreparationTask
    name: mapper()
    summary: Defines the metadata of JobPreparationTask
    fullName: azure-batch.JobPreparationTask.mapper()
    type: Function
    syntax:
      return:
        type:
          - object
        description: metadata of JobPreparationTask
      content: function mapper()
    langs:
      - js

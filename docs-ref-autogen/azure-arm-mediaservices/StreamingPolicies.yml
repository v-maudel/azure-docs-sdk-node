### YamlMime:UniversalReference
items:
  - uid: azure-arm-mediaservices.StreamingPolicies
    id: azure-arm-mediaservices.StreamingPolicies
    name: StreamingPolicies
    summary: Class representing a StreamingPolicies.
    fullName: azure-arm-mediaservices.StreamingPolicies
    type: Class
    children:
      - 'azure-arm-mediaservices.StreamingPolicies.#ctor'
      - 'azure-arm-mediaservices.StreamingPolicies#listWithHttpOperationResponse'
      - 'azure-arm-mediaservices.StreamingPolicies#list'
      - 'azure-arm-mediaservices.StreamingPolicies#getWithHttpOperationResponse'
      - 'azure-arm-mediaservices.StreamingPolicies#get'
      - >-
        azure-arm-mediaservices.StreamingPolicies#createWithHttpOperationResponse
      - 'azure-arm-mediaservices.StreamingPolicies#create'
      - >-
        azure-arm-mediaservices.StreamingPolicies#deleteMethodWithHttpOperationResponse
      - 'azure-arm-mediaservices.StreamingPolicies#deleteMethod'
      - >-
        azure-arm-mediaservices.StreamingPolicies#listNextWithHttpOperationResponse
      - 'azure-arm-mediaservices.StreamingPolicies#listNext'
    langs:
      - js
  - id: 'azure-arm-mediaservices.StreamingPolicies.#ctor'
    uid: 'azure-arm-mediaservices.StreamingPolicies.#ctor'
    parent: azure-arm-mediaservices.StreamingPolicies
    name: StreamingPolicies(client)
    fullName: azure-arm-mediaservices.StreamingPolicies.StreamingPolicies(client)
    summary: Create a StreamingPolicies.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedAzureMediaServices
          description: Reference to the service client.
      content: new StreamingPolicies(client)
    langs:
      - js
  - uid: 'azure-arm-mediaservices.StreamingPolicies#listWithHttpOperationResponse'
    id: 'azure-arm-mediaservices.StreamingPolicies#listWithHttpOperationResponse'
    parent: azure-arm-mediaservices.StreamingPolicies
    name: 'listWithHttpOperationResponse(resourceGroupName, accountName, options)'
    summary: |-
      List Streaming Policies

      Lists the Streaming Policies in the account
    fullName: >-
      azure-arm-mediaservices.StreamingPolicies.listWithHttpOperationResponse(resourceGroupName,
      accountName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<StreamingPolicyCollection>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<StreamingPolicyCollection>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            Azure subscription.
        - id: accountName
          type:
            - string
          description: The Media Services account name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: Restricts the set of items returned.
          optional: true
        - id: options.top
          type:
            - number
          description: >-
            Specifies a non-negative integer n that limits

            the number of items returned from a collection. The service returns
            the

            number of available items up to but not greater than the specified
            value n.
          optional: true
        - id: options.orderby
          type:
            - string
          description: |-
            Specifies the the key by which the result
            collection should be ordered.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listWithHttpOperationResponse(resourceGroupName, accountName,
        options)
    langs:
      - js
  - uid: 'azure-arm-mediaservices.StreamingPolicies#list'
    id: 'azure-arm-mediaservices.StreamingPolicies#list'
    parent: azure-arm-mediaservices.StreamingPolicies
    name: 'list(resourceGroupName, accountName, options, optionalCallback)'
    summary: |-
      List Streaming Policies

      Lists the Streaming Policies in the account
    fullName: >-
      azure-arm-mediaservices.StreamingPolicies.list(resourceGroupName,
      accountName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{StreamingPolicyCollection} - The deserialized result object.'
        value: '{StreamingPolicyCollection} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link StreamingPolicyCollection} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link StreamingPolicyCollection} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            Azure subscription.
        - id: accountName
          type:
            - string
          description: The Media Services account name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: Restricts the set of items returned.
          optional: true
        - id: options.top
          type:
            - number
          description: >-
            Specifies a non-negative integer n that limits

            the number of items returned from a collection. The service returns
            the

            number of available items up to but not greater than the specified
            value n.
          optional: true
        - id: options.orderby
          type:
            - string
          description: |-
            Specifies the the key by which the result
            collection should be ordered.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function list(resourceGroupName, accountName, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-mediaservices.StreamingPolicies#getWithHttpOperationResponse'
    id: 'azure-arm-mediaservices.StreamingPolicies#getWithHttpOperationResponse'
    parent: azure-arm-mediaservices.StreamingPolicies
    name: >-
      getWithHttpOperationResponse(resourceGroupName, accountName,
      streamingPolicyName, options)
    summary: |-
      Get a Streaming Policy

      Get the details of a Streaming Policy in the Media Services account
    fullName: >-
      azure-arm-mediaservices.StreamingPolicies.getWithHttpOperationResponse(resourceGroupName,
      accountName, streamingPolicyName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<StreamingPolicy>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<StreamingPolicy>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            Azure subscription.
        - id: accountName
          type:
            - string
          description: The Media Services account name.
        - id: streamingPolicyName
          type:
            - string
          description: The Streaming Policy name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, accountName,
        streamingPolicyName, options)
    langs:
      - js
  - uid: 'azure-arm-mediaservices.StreamingPolicies#get'
    id: 'azure-arm-mediaservices.StreamingPolicies#get'
    parent: azure-arm-mediaservices.StreamingPolicies
    name: >-
      get(resourceGroupName, accountName, streamingPolicyName, options,
      optionalCallback)
    summary: |-
      Get a Streaming Policy

      Get the details of a Streaming Policy in the Media Services account
    fullName: >-
      azure-arm-mediaservices.StreamingPolicies.get(resourceGroupName,
      accountName, streamingPolicyName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{StreamingPolicy} - The deserialized result object.'
        value: '{StreamingPolicy} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link StreamingPolicy} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link StreamingPolicy} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            Azure subscription.
        - id: accountName
          type:
            - string
          description: The Media Services account name.
        - id: streamingPolicyName
          type:
            - string
          description: The Streaming Policy name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(resourceGroupName, accountName, streamingPolicyName,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-mediaservices.StreamingPolicies#createWithHttpOperationResponse'
    id: 'azure-arm-mediaservices.StreamingPolicies#createWithHttpOperationResponse'
    parent: azure-arm-mediaservices.StreamingPolicies
    name: >-
      createWithHttpOperationResponse(resourceGroupName, accountName,
      streamingPolicyName, parameters, options)
    summary: |-
      Create a Streaming Policy

      Create a Streaming Policy in the Media Services account
    fullName: >-
      azure-arm-mediaservices.StreamingPolicies.createWithHttpOperationResponse(resourceGroupName,
      accountName, streamingPolicyName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<StreamingPolicy>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<StreamingPolicy>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            Azure subscription.
        - id: accountName
          type:
            - string
          description: The Media Services account name.
        - id: streamingPolicyName
          type:
            - string
          description: The Streaming Policy name.
        - id: parameters
          type:
            - object
          description: The request parameters
        - id: parameters.defaultContentKeyPolicyName
          type:
            - string
          description: |-
            Default ContentKey
            used by current Streaming Policy
          optional: true
        - id: parameters.envelopeEncryption
          type:
            - object
          description: |-
            Configuration of
            EnvelopeEncryption
          optional: true
        - id: parameters.envelopeEncryption.enabledProtocols
          type:
            - object
          description: Representing supported protocols
          optional: true
        - id: parameters.envelopeEncryption.clearTracks
          type:
            - array
          description: |-
            Representing
            which tracks should not be encrypted
          optional: true
        - id: parameters.envelopeEncryption.contentKeys
          type:
            - object
          description: >-
            Representing

            default content key for each encryption scheme and separate content
            keys for

            specific tracks
          optional: true
        - id: parameters.envelopeEncryption.customLicenseAcquisitionUrlTemplate
          type:
            - string
          description: >-
            LicenseAcquistionUrlTemplate is used to point to user speicified
            service to

            delivery content keys
          optional: true
        - id: parameters.commonEncryptionCenc
          type:
            - object
          description: |-
            Configuration of
            CommonEncryptionCenc
          optional: true
        - id: parameters.commonEncryptionCenc.enabledProtocols
          type:
            - object
          description: Representing supported protocols
          optional: true
        - id: parameters.commonEncryptionCenc.clearTracks
          type:
            - array
          description: |-
            Representing
            which tracks should not be encrypted
          optional: true
        - id: parameters.commonEncryptionCenc.contentKeys
          type:
            - object
          description: >-
            Representing

            default content key for each encryption scheme and separate content
            keys for

            specific tracks
          optional: true
        - id: parameters.commonEncryptionCenc.drm
          type:
            - object
          description: |-
            Configuration of DRMs
            for CommonEncryptionCenc encryption scheme
          optional: true
        - id: parameters.commonEncryptionCenc.drm.playReady
          type:
            - object
          description: |-
            PlayReady
            configurations
          optional: true
        - id: parameters.commonEncryptionCenc.drm.widevine
          type:
            - object
          description: |-
            Widevine
            configurations
          optional: true
        - id: parameters.commonEncryptionCbcs
          type:
            - object
          description: |-
            Configuration of
            CommonEncryptionCbcs
          optional: true
        - id: parameters.commonEncryptionCbcs.enabledProtocols
          type:
            - object
          description: Representing supported protocols
          optional: true
        - id: parameters.commonEncryptionCbcs.clearTracks
          type:
            - array
          description: |-
            Representing
            which tracks should not be encrypted
          optional: true
        - id: parameters.commonEncryptionCbcs.contentKeys
          type:
            - object
          description: >-
            Representing

            default content key for each encryption scheme and separate content
            keys for

            specific tracks
          optional: true
        - id: parameters.commonEncryptionCbcs.contentKeys.defaultKey
          type:
            - object
          description: Default content key for an encryption scheme
          optional: true
        - id: parameters.commonEncryptionCbcs.contentKeys.defaultKey.label
          type:
            - string
          description: |-
            Label can be
            used to specify Content Key when creating Stremaing Locator
          optional: true
        - id: parameters.commonEncryptionCbcs.contentKeys.defaultKey.policyName
          type:
            - string
          description: |-
            Policy
            used by Default Key
          optional: true
        - id: parameters.commonEncryptionCbcs.contentKeys.keyToTrackMappings
          type:
            - array
          description: Representing tracks needs sepearete content key
          optional: true
        - id: parameters.commonEncryptionCbcs.drm
          type:
            - object
          description: |-
            Configuration of DRMs
            for current encryption scheme
          optional: true
        - id: parameters.commonEncryptionCbcs.drm.fairPlay
          type:
            - object
          description: |-
            Fairplay
            configurations
          optional: true
        - id: >-
            parameters.commonEncryptionCbcs.drm.fairPlay.customLicenseAcquisitionUrlTemplate
          type:
            - string
          description: >-
            The template for a customer service to deliver keys to end users. 
            Not

            needed when using Azure Media Services for issuing keys.
          optional: true
        - id: parameters.commonEncryptionCbcs.drm.fairPlay.allowPersistentLicense
          type:
            - boolean
          description: |-
            All
            license to be persistent or not
        - id: parameters.commonEncryptionCbcs.drm.playReady
          type:
            - object
          description: |-
            PlayReady
            configurations
          optional: true
        - id: >-
            parameters.commonEncryptionCbcs.drm.playReady.customLicenseAcquisitionUrlTemplate
          type:
            - string
          description: >-
            The template for a customer service to deliver keys to end users. 
            Not

            needed when using Azure Media Services for issuing keys.
          optional: true
        - id: >-
            parameters.commonEncryptionCbcs.drm.playReady.playReadyCustomAttributes
          type:
            - string
          description: Custom attributes for PlayReady
          optional: true
        - id: parameters.commonEncryptionCbcs.drm.widevine
          type:
            - object
          description: |-
            Widevine
            configurations
          optional: true
        - id: >-
            parameters.commonEncryptionCbcs.drm.widevine.customLicenseAcquisitionUrlTemplate
          type:
            - string
          description: >-
            The template for a customer service to deliver keys to end users. 
            Not

            needed when using Azure Media Services for issuing keys.
          optional: true
        - id: parameters.noEncryption
          type:
            - object
          description: Configuations of NoEncryption
          optional: true
        - id: parameters.noEncryption.enabledProtocols
          type:
            - object
          description: |-
            Representing
            supported protocols
          optional: true
        - id: parameters.noEncryption.enabledProtocols.download
          type:
            - boolean
          description: |-
            Enable
            Download protocol or not
        - id: parameters.noEncryption.enabledProtocols.dash
          type:
            - boolean
          description: |-
            Enable Dash
            protocol or not
        - id: parameters.noEncryption.enabledProtocols.hls
          type:
            - boolean
          description: |-
            Enable Hls
            protocol or not
        - id: parameters.noEncryption.enabledProtocols.smoothStreaming
          type:
            - boolean
          description: Enable SmoothStreaming protocol or not
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createWithHttpOperationResponse(resourceGroupName, accountName,
        streamingPolicyName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-mediaservices.StreamingPolicies#create'
    id: 'azure-arm-mediaservices.StreamingPolicies#create'
    parent: azure-arm-mediaservices.StreamingPolicies
    name: >-
      create(resourceGroupName, accountName, streamingPolicyName, parameters,
      options, optionalCallback)
    summary: |-
      Create a Streaming Policy

      Create a Streaming Policy in the Media Services account
    fullName: >-
      azure-arm-mediaservices.StreamingPolicies.create(resourceGroupName,
      accountName, streamingPolicyName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{StreamingPolicy} - The deserialized result object.'
        value: '{StreamingPolicy} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link StreamingPolicy} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link StreamingPolicy} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            Azure subscription.
        - id: accountName
          type:
            - string
          description: The Media Services account name.
        - id: streamingPolicyName
          type:
            - string
          description: The Streaming Policy name.
        - id: parameters
          type:
            - object
          description: The request parameters
        - id: parameters.defaultContentKeyPolicyName
          type:
            - string
          description: |-
            Default ContentKey
            used by current Streaming Policy
          optional: true
        - id: parameters.envelopeEncryption
          type:
            - object
          description: |-
            Configuration of
            EnvelopeEncryption
          optional: true
        - id: parameters.envelopeEncryption.enabledProtocols
          type:
            - object
          description: Representing supported protocols
          optional: true
        - id: parameters.envelopeEncryption.clearTracks
          type:
            - array
          description: |-
            Representing
            which tracks should not be encrypted
          optional: true
        - id: parameters.envelopeEncryption.contentKeys
          type:
            - object
          description: >-
            Representing

            default content key for each encryption scheme and separate content
            keys for

            specific tracks
          optional: true
        - id: parameters.envelopeEncryption.customLicenseAcquisitionUrlTemplate
          type:
            - string
          description: >-
            LicenseAcquistionUrlTemplate is used to point to user speicified
            service to

            delivery content keys
          optional: true
        - id: parameters.commonEncryptionCenc
          type:
            - object
          description: |-
            Configuration of
            CommonEncryptionCenc
          optional: true
        - id: parameters.commonEncryptionCenc.enabledProtocols
          type:
            - object
          description: Representing supported protocols
          optional: true
        - id: parameters.commonEncryptionCenc.clearTracks
          type:
            - array
          description: |-
            Representing
            which tracks should not be encrypted
          optional: true
        - id: parameters.commonEncryptionCenc.contentKeys
          type:
            - object
          description: >-
            Representing

            default content key for each encryption scheme and separate content
            keys for

            specific tracks
          optional: true
        - id: parameters.commonEncryptionCenc.drm
          type:
            - object
          description: |-
            Configuration of DRMs
            for CommonEncryptionCenc encryption scheme
          optional: true
        - id: parameters.commonEncryptionCenc.drm.playReady
          type:
            - object
          description: |-
            PlayReady
            configurations
          optional: true
        - id: parameters.commonEncryptionCenc.drm.widevine
          type:
            - object
          description: |-
            Widevine
            configurations
          optional: true
        - id: parameters.commonEncryptionCbcs
          type:
            - object
          description: |-
            Configuration of
            CommonEncryptionCbcs
          optional: true
        - id: parameters.commonEncryptionCbcs.enabledProtocols
          type:
            - object
          description: Representing supported protocols
          optional: true
        - id: parameters.commonEncryptionCbcs.clearTracks
          type:
            - array
          description: |-
            Representing
            which tracks should not be encrypted
          optional: true
        - id: parameters.commonEncryptionCbcs.contentKeys
          type:
            - object
          description: >-
            Representing

            default content key for each encryption scheme and separate content
            keys for

            specific tracks
          optional: true
        - id: parameters.commonEncryptionCbcs.contentKeys.defaultKey
          type:
            - object
          description: Default content key for an encryption scheme
          optional: true
        - id: parameters.commonEncryptionCbcs.contentKeys.defaultKey.label
          type:
            - string
          description: |-
            Label can be
            used to specify Content Key when creating Stremaing Locator
          optional: true
        - id: parameters.commonEncryptionCbcs.contentKeys.defaultKey.policyName
          type:
            - string
          description: |-
            Policy
            used by Default Key
          optional: true
        - id: parameters.commonEncryptionCbcs.contentKeys.keyToTrackMappings
          type:
            - array
          description: Representing tracks needs sepearete content key
          optional: true
        - id: parameters.commonEncryptionCbcs.drm
          type:
            - object
          description: |-
            Configuration of DRMs
            for current encryption scheme
          optional: true
        - id: parameters.commonEncryptionCbcs.drm.fairPlay
          type:
            - object
          description: |-
            Fairplay
            configurations
          optional: true
        - id: >-
            parameters.commonEncryptionCbcs.drm.fairPlay.customLicenseAcquisitionUrlTemplate
          type:
            - string
          description: >-
            The template for a customer service to deliver keys to end users. 
            Not

            needed when using Azure Media Services for issuing keys.
          optional: true
        - id: parameters.commonEncryptionCbcs.drm.fairPlay.allowPersistentLicense
          type:
            - boolean
          description: |-
            All
            license to be persistent or not
        - id: parameters.commonEncryptionCbcs.drm.playReady
          type:
            - object
          description: |-
            PlayReady
            configurations
          optional: true
        - id: >-
            parameters.commonEncryptionCbcs.drm.playReady.customLicenseAcquisitionUrlTemplate
          type:
            - string
          description: >-
            The template for a customer service to deliver keys to end users. 
            Not

            needed when using Azure Media Services for issuing keys.
          optional: true
        - id: >-
            parameters.commonEncryptionCbcs.drm.playReady.playReadyCustomAttributes
          type:
            - string
          description: Custom attributes for PlayReady
          optional: true
        - id: parameters.commonEncryptionCbcs.drm.widevine
          type:
            - object
          description: |-
            Widevine
            configurations
          optional: true
        - id: >-
            parameters.commonEncryptionCbcs.drm.widevine.customLicenseAcquisitionUrlTemplate
          type:
            - string
          description: >-
            The template for a customer service to deliver keys to end users. 
            Not

            needed when using Azure Media Services for issuing keys.
          optional: true
        - id: parameters.noEncryption
          type:
            - object
          description: Configuations of NoEncryption
          optional: true
        - id: parameters.noEncryption.enabledProtocols
          type:
            - object
          description: |-
            Representing
            supported protocols
          optional: true
        - id: parameters.noEncryption.enabledProtocols.download
          type:
            - boolean
          description: |-
            Enable
            Download protocol or not
        - id: parameters.noEncryption.enabledProtocols.dash
          type:
            - boolean
          description: |-
            Enable Dash
            protocol or not
        - id: parameters.noEncryption.enabledProtocols.hls
          type:
            - boolean
          description: |-
            Enable Hls
            protocol or not
        - id: parameters.noEncryption.enabledProtocols.smoothStreaming
          type:
            - boolean
          description: Enable SmoothStreaming protocol or not
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function create(resourceGroupName, accountName, streamingPolicyName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-mediaservices.StreamingPolicies#deleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-mediaservices.StreamingPolicies#deleteMethodWithHttpOperationResponse
    parent: azure-arm-mediaservices.StreamingPolicies
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, accountName,
      streamingPolicyName, options)
    summary: |-
      Delete a Streaming Policy

      Deletes a Streaming Policy in the Media Services account
    fullName: >-
      azure-arm-mediaservices.StreamingPolicies.deleteMethodWithHttpOperationResponse(resourceGroupName,
      accountName, streamingPolicyName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            Azure subscription.
        - id: accountName
          type:
            - string
          description: The Media Services account name.
        - id: streamingPolicyName
          type:
            - string
          description: The Streaming Policy name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        accountName, streamingPolicyName, options)
    langs:
      - js
  - uid: 'azure-arm-mediaservices.StreamingPolicies#deleteMethod'
    id: 'azure-arm-mediaservices.StreamingPolicies#deleteMethod'
    parent: azure-arm-mediaservices.StreamingPolicies
    name: >-
      deleteMethod(resourceGroupName, accountName, streamingPolicyName, options,
      optionalCallback)
    summary: |-
      Delete a Streaming Policy

      Deletes a Streaming Policy in the Media Services account
    fullName: >-
      azure-arm-mediaservices.StreamingPolicies.deleteMethod(resourceGroupName,
      accountName, streamingPolicyName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            Azure subscription.
        - id: accountName
          type:
            - string
          description: The Media Services account name.
        - id: streamingPolicyName
          type:
            - string
          description: The Streaming Policy name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, accountName,
        streamingPolicyName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-mediaservices.StreamingPolicies#listNextWithHttpOperationResponse
    id: >-
      azure-arm-mediaservices.StreamingPolicies#listNextWithHttpOperationResponse
    parent: azure-arm-mediaservices.StreamingPolicies
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      List Streaming Policies

      Lists the Streaming Policies in the account
    fullName: >-
      azure-arm-mediaservices.StreamingPolicies.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<StreamingPolicyCollection>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<StreamingPolicyCollection>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-arm-mediaservices.StreamingPolicies#listNext'
    id: 'azure-arm-mediaservices.StreamingPolicies#listNext'
    parent: azure-arm-mediaservices.StreamingPolicies
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: |-
      List Streaming Policies

      Lists the Streaming Policies in the account
    fullName: >-
      azure-arm-mediaservices.StreamingPolicies.listNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{StreamingPolicyCollection} - The deserialized result object.'
        value: '{StreamingPolicyCollection} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link StreamingPolicyCollection} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link StreamingPolicyCollection} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js

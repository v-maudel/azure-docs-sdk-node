### YamlMime:UniversalReference
items:
  - uid: botbuilder-azure.BlobServiceAsync
    name: BlobServiceAsync
    fullName: BlobServiceAsync
    children:
      - botbuilder-azure.BlobServiceAsync.BlobService.BlobToText
      - botbuilder-azure.BlobServiceAsync.createBlockBlobFromTextAsync
      - botbuilder-azure.BlobServiceAsync.createContainerIfNotExistsAsync
      - botbuilder-azure.BlobServiceAsync.deleteBlobIfExistsAsync
      - botbuilder-azure.BlobServiceAsync.deleteContainerIfExistsAsync
      - botbuilder-azure.BlobServiceAsync.getBlobMetadataAsync
      - botbuilder-azure.BlobServiceAsync.getBlobToTextAsync
      - botbuilder-azure.BlobServiceAsync.BlobService.LeaseRequestOptions
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: BlobService
    package: botbuilder-azure
  - uid: botbuilder-azure.BlobServiceAsync.BlobService.BlobToText
    name: BlobToText
    fullName: BlobToText
    children: []
    langs:
      - typeScript
    type: interface
    summary: ''
    package: botbuilder-azure
    module: BlobService
  - uid: botbuilder-azure.BlobServiceAsync.createBlockBlobFromTextAsync
    name: createBlockBlobFromTextAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createBlockBlobFromTextAsync(container: string, blob: string,
        text: string | Buffer, options: CreateBlobRequestOptions)
      parameters:
        - id: container
          type:
            - string
          description: ''
        - id: blob
          type:
            - string
          description: ''
        - id: text
          type:
            - string | Buffer
          description: ''
        - id: options
          type:
            - CreateBlobRequestOptions
          description: ''
      return:
        type:
          - Promise<BlobResult>
  - uid: botbuilder-azure.BlobServiceAsync.createContainerIfNotExistsAsync
    name: createContainerIfNotExistsAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createContainerIfNotExistsAsync(container: string)'
      parameters:
        - id: container
          type:
            - string
          description: ''
      return:
        type:
          - Promise<ContainerResult>
  - uid: botbuilder-azure.BlobServiceAsync.deleteBlobIfExistsAsync
    name: deleteBlobIfExistsAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteBlobIfExistsAsync(container: string, blob: string)'
      parameters:
        - id: container
          type:
            - string
          description: ''
        - id: blob
          type:
            - string
          description: ''
      return:
        type:
          - Promise<boolean>
  - uid: botbuilder-azure.BlobServiceAsync.deleteContainerIfExistsAsync
    name: deleteContainerIfExistsAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteContainerIfExistsAsync(container: string)'
      parameters:
        - id: container
          type:
            - string
          description: ''
      return:
        type:
          - Promise<boolean>
  - uid: botbuilder-azure.BlobServiceAsync.getBlobMetadataAsync
    name: getBlobMetadataAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBlobMetadataAsync(container: string, blob: string)'
      parameters:
        - id: container
          type:
            - string
          description: ''
        - id: blob
          type:
            - string
          description: ''
      return:
        type:
          - Promise<BlobResult>
  - uid: botbuilder-azure.BlobServiceAsync.getBlobToTextAsync
    name: getBlobToTextAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBlobToTextAsync(container: string, blob: string)'
      parameters:
        - id: container
          type:
            - string
          description: ''
        - id: blob
          type:
            - string
          description: ''
      return:
        type:
          - Promise<BlobToText>
  - uid: botbuilder-azure.BlobServiceAsync.BlobService.LeaseRequestOptions
    name: LeaseRequestOptions
    fullName: LeaseRequestOptions
    children: []
    langs:
      - typeScript
    type: interface
    summary: ''
    package: botbuilder-azure
    module: BlobService

### YamlMime:UniversalReference
items:
  - uid: botbuilder-azure.BlobStorage
    name: BlobStorage
    fullName: BlobStorage
    children:
      - botbuilder-azure.BlobStorage.constructor
      - botbuilder-azure.BlobStorage.delete
      - botbuilder-azure.BlobStorage.read
      - botbuilder-azure.BlobStorage.write
    langs:
      - typeScript
    type: class
    summary: >
      Middleware that implements a BlobStorage based storage provider for a bot.

      The BlobStorage implements State's Storage using a single Azure Storage
      Blob Container.

      Each entity or StoreItem is serialized into a JSON string and stored in an
      individual text blob.

      Each blob is named after the StoreItem key which is encoded and ensure it
      conforms a valid blob name.
    package: botbuilder-azure
  - uid: botbuilder-azure.BlobStorage.constructor
    name: BlobStorage
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Loads store items from storage.

      Returns the values for the specified keys that were found in the
      container.
    syntax:
      content: 'new BlobStorage(settings: BlobStorageSettings)'
      parameters:
        - id: settings
          type:
            - botbuilder-azure.BlobStorageSettings
          description: |
            Settings for configuring an instance of BlobStorage.
  - uid: botbuilder-azure.BlobStorage.delete
    name: delete
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes store items from storage.
    syntax:
      content: 'function delete(keys: string[])'
      parameters:
        - id: keys
          type:
            - 'string[]'
          description: |
            Array of item keys to remove from the store.
      return:
        type:
          - Promise<void>
  - uid: botbuilder-azure.BlobStorage.read
    name: read
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Loads store items from storage.

      Returns the values for the specified keys that were found in the
      container.
    syntax:
      content: 'function read(keys: string[])'
      parameters:
        - id: keys
          type:
            - 'string[]'
          description: |
            Array of item keys to read from the store.
      return:
        type:
          - Promise<StoreItems>
  - uid: botbuilder-azure.BlobStorage.write
    name: write
    children: []
    type: method
    langs:
      - typeScript
    summary: Saves store items to storage.
    syntax:
      content: 'function write(changes: StoreItems)'
      parameters:
        - id: changes
          type:
            - StoreItems
          description: |
            Map of items to write to storage.
      return:
        type:
          - Promise<void>
references:
  - uid: botbuilder-azure.BlobStorageSettings
    spec.typeScript:
      - name: BlobStorageSettings
        fullName: BlobStorageSettings
        uid: botbuilder-azure.BlobStorageSettings

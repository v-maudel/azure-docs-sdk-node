### YamlMime:UniversalReference
items:
  - uid: botbuilder-azure.CosmosDbStorage
    name: CosmosDbStorage
    fullName: CosmosDbStorage
    children:
      - botbuilder-azure.CosmosDbStorage.constructor
      - botbuilder-azure.CosmosDbStorage.delete
      - botbuilder-azure.CosmosDbStorage.read
      - botbuilder-azure.CosmosDbStorage.write
    langs:
      - typeScript
    type: class
    summary: >-
      Middleware that implements a CosmosDB based storage provider for a bot.

      The ConnectionPolicy delegate can be used to further customize the
      connection to CosmosDB (Connection mode, retry options, timeouts).

      More information at
      http://azure.github.io/azure-documentdb-node/global.html#ConnectionPolicy
    package: botbuilder-azure
  - uid: botbuilder-azure.CosmosDbStorage.constructor
    name: CosmosDbStorage
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new instance of the storage provider.
    syntax:
      content: >-
        new CosmosDbStorage(settings: CosmosDbStorageSettings,
        connectionPolicyConfigurator: (policy: ConnectionPolicy) => void)
      parameters:
        - id: settings
          type:
            - botbuilder-azure.CosmosDbStorageSettings
          description: Setting to configure the provider.
        - id: connectionPolicyConfigurator
          type:
            - '(policy: ConnectionPolicy) => void'
          description: >
            (Optional) An optional delegate that accepts a ConnectionPolicy for
            customizing policies. More information at
            http://azure.github.io/azure-documentdb-node/global.html#ConnectionPolicy
  - uid: botbuilder-azure.CosmosDbStorage.delete
    name: delete
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes store items from storage
    syntax:
      content: 'function delete(keys: string[])'
      parameters:
        - id: keys
          type:
            - 'string[]'
          description: |
            Array of item keys to remove from the store.
      return:
        type:
          - Promise<void>
  - uid: botbuilder-azure.CosmosDbStorage.read
    name: read
    children: []
    type: method
    langs:
      - typeScript
    summary: Loads store items from storage
    syntax:
      content: 'function read(keys: string[])'
      parameters:
        - id: keys
          type:
            - 'string[]'
          description: |
            Array of item keys to read from the store.
      return:
        type:
          - Promise<StoreItems>
  - uid: botbuilder-azure.CosmosDbStorage.write
    name: write
    children: []
    type: method
    langs:
      - typeScript
    summary: Saves store items to storage.
    syntax:
      content: 'function write(changes: StoreItems)'
      parameters:
        - id: changes
          type:
            - StoreItems
          description: |
            Map of items to write to storage.
      return:
        type:
          - Promise<void>

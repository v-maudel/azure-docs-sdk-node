### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs.DatetimePrompt
    name: DatetimePrompt
    fullName: DatetimePrompt<C>
    children:
      - botbuilder-dialogs.DatetimePrompt.constructor
    langs:
      - typeScript
    type: class
    summary: >-
      :package: **botbuilder-dialogs**

      Prompts a user to enter a datetime expression. By default the prompt will
      return to the

      calling dialog a `FoundDatetime[]` but this can be overridden using a
      custom `PromptValidator`.


      ### Prompt Usage


      When used with your bots `DialogSet` you can simply add a new instance of
      the prompt as a named

      dialog using `DialogSet.add()`. You can then start the prompt from a
      waterfall step using either

      `DialogContext.begin()` or `DialogContext.prompt()`. The user will be
      prompted to reply with a

      date and/or time. The recognized date/time will be passed as an argument
      to the callers next

      waterfall step:


      ```JavaScript

      const { DialogSet, DatetimePrompt } = require('botbuilder-dialogs');


      const dialogs = new DialogSet();


      dialogs.add('datetimePrompt', new DatetimePrompt(AlarmTimeValidator));


      dialogs.add('setAlarmTime', [
           async function (dc) {
               await dc.prompt('datetimePrompt', `What time should I set your alarm for?`);
           },
           async function (dc, time) {
               await dc.context.sendActivity(`Alarm time set`);
               await dc.end();
           }
      ]);


      async function AlarmTimeValidator(context, values) {
          try {
              if (!Array.isArray(values) || values.length < 0) { throw new Error('missing time') }
              if (values[0].type !== 'datetime') { throw new Error('unsupported type') }
              const value = new Date(values[0].value);
              if (value.getTime() < new Date().getTime()) { throw new Error('in the past') }
              return value;
          } catch (err) {
              await context.sendActivity(`Answer with a time in the future like "tomorrow at 9am" or say "cancel".`);
              return undefined;
          }
      }

      ```
    extends:
      name: botbuilder-dialogs.Prompt<C>
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.DatetimePrompt.constructor
    name: DatetimePrompt
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new `DatetimePrompt` instance.
    syntax:
      content: >-
        new DatetimePrompt(validator?: PromptValidator<FoundDatetime[], O>,
        defaultLocale?: string)
      parameters:
        - id: validator
          type:
            - 'PromptValidator<FoundDatetime[], O>'
          description: >-
            (Optional) validator that will be called each time the user responds
            to the prompt. If the validator replies with a message no additional
            retry prompt will be sent.
          optional: true
        - id: defaultLocale
          type:
            - string
          description: >
            (Optional) locale to use if `dc.context.activity.locale` not
            specified. Defaults to a value of `en-us`.
          optional: true
references:
  - uid: botbuilder-dialogs.Prompt<C>
    spec.typeScript:
      - name: Prompt
        fullName: Prompt
        uid: botbuilder-dialogs.Prompt
      - name: <C>
        fullName: <C>
